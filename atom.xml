<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Ewan&#39;s Blog</title>
  <subtitle>Ewan&#39;s Blog | 杨依园技术博客 | 专注于PHP，涉及MySQL，Linux，Web，Nginx，Apache，Phalcon，Laravel，Redis，PostgreSql，Composer，Beanstalkd，Swoole</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://www.iooeo.com/"/>
  <updated>2018-07-24T01:36:52.607Z</updated>
  <id>http://www.iooeo.com/</id>
  
  <author>
    <name>Ewan</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Symfony 4.1.2 发布，PHP 框架与可重用 PHP 组件集</title>
    <link href="http://www.iooeo.com/2018/07/24/Symfony-4-1-2-%E5%8F%91%E5%B8%83%EF%BC%8CPHP-%E6%A1%86%E6%9E%B6%E4%B8%8E%E5%8F%AF%E9%87%8D%E7%94%A8-PHP-%E7%BB%84%E4%BB%B6%E9%9B%86/"/>
    <id>http://www.iooeo.com/2018/07/24/Symfony-4-1-2-发布，PHP-框架与可重用-PHP-组件集/</id>
    <published>2018-07-24T01:33:03.000Z</published>
    <updated>2018-07-24T01:36:52.607Z</updated>
    
    <content type="html"><![CDATA[<p>Symfony 4.1.2 发布了，Symfony 是一款基于 MVC 架构的 PHP 框架。Symfony 致力于减少重复代码的编写，以加速 Web 应用的开发和维护。Symfony 与许多关系型数据库集成的也非常好，成本也较小。此外，Symfony 致力于在企业背景下创建健壮的应用，同时也给予了开发者强大的配置功能：从文件结构到外部目录，几乎所有的东西都可以自定义。Symfony 也捆绑了一些诸如测试、调试、文档生成等额外的工具来满足企业的开发过程。<br><a id="more"></a><br>此次更新修复了一些 bug，内容如下：</p>
<ul>
<li>bug #28005 [HttpKernel] Fixed templateExists on parse error of the template name (@yceruto)</li>
<li>bug #28013 [Messenger] Add missing typehint on chain sender (@sroze)</li>
<li>bug #27997 Serbo-Croatian has Serbian plural rule (@kylekatarnls)</li>
<li>bug #26193 Fix false-positive deprecation notices for TranslationLoader and WriteCheckSessionHandler (@iquito)</li>
<li>bug #27827 [Serializer] Supports nested abstract items (@sroze)</li>
<li>bug #27958 [Form] Remaining changes for bootstrap 4 file fields (@apfelbox)</li>
<li>bug #27919 [Form] Improve rendering of file field in bootstrap 4 (@apfelbox)</li>
<li>bug #27941 [WebProfilerBundle] Fixed icon alignment issue using Bootstrap 4.1.2 (@jmsche)</li>
<li>bug #27937 [HttpFoundation] reset callback on StreamedResponse when setNotModified() is called (@rubencm)</li>
<li>bug #27927 [HttpFoundation] Suppress side effects in ‘get’ and ‘has’ methods of NamespacedAttributeBag (@webnet-fr)</li>
<li>bug #27913 [EventDispatcher] Clear orphaned events on reset (@acasademont)</li>
<li>bug #27923 [Form/Profiler] Massively reducing memory footprint of form profiling pages… (@VincentChalnot)</li>
<li>bug #27918 [Console] correctly return parameter’s default value on “–” (@seschwar)</li>
<li>bug #27826 [Serializer] Fix serialization of items with groups across entities and discrimination map (@sroze)</li>
<li>bug #27904 [Filesystem] fix lock file permissions (@fritzmg)</li>
<li>bug #27903 [Lock] fix lock file permissions (@fritzmg)</li>
<li>bug #27889 [Form] Replace .initialism with .text-uppercase. (@vudaltsov)</li>
<li>bug #27902 Fix the detection of the Process new argument (@stof)</li>
<li>bug #27885 [HttpFoundation] don’t encode cookie name for BC (@nicolas-grekas)</li>
<li>bug #27782 [DI] Fix dumping ignore-on-uninitialized references to synthetic services (@nicolas-grekas)</li>
<li>bug #27435 [OptionResolver] resolve arrays (@Doctrs)</li>
<li>bug #27728 [TwigBridge] Fix missing path and separators in loader paths list on debug:twig output (@yceruto)</li>
<li>bug #27837 [PropertyInfo] Fix dock block lookup fallback loop (@DerManoMann)</li>
<li>bug #27848 [Workflow] Fixed BC break (@lyrixx)</li>
<li>bug #27758 [WebProfilerBundle] Prevent toolbar links color override by css (@alcalyn)</li>
<li>bug #27847 [Security] Fix accepting null as $uidKey in LdapUserProvider (@louhde)</li>
<li>bug #27820 [Messenger] Fix a bug when having more than one named handler per message subscriber (@sroze)</li>
<li>bug #27834 [DI] Don’t show internal service id on binding errors (@nicolas-grekas)</li>
<li>bug #27831 Check for Hyper terminal on all operating systems. (@azjezz)</li>
<li>bug #27794 Add color support for Hyper terminal . (@azjezz)</li>
<li>bug #27809 [HttpFoundation] Fix tests: new message for status 425 (@dunglas)</li>
<li>bug #27618 [PropertyInfo] added handling of nullable types in PhpDoc (@oxan)</li>
<li>bug #27659 [HttpKernel] Make AbstractTestSessionListener compatible with CookieClearingLogoutHandler (@thewilkybarkid)</li>
<li>bug #27752 [Cache] provider does not respect option maxIdLength with versioning enabled (@Constantine Shtompel)</li>
<li>bug #27773 [Serializer] Class discriminator and serialization groups (@sroze)</li>
<li>bug #27710 [DependencyInjection] fix handling of empty DI extension configs (@xabbuh)</li>
<li>bug #27776 [ProxyManagerBridge] Fix support of private services (bis) (@nicolas-grekas)</li>
<li>bug #27714 [HttpFoundation] fix session tracking counter (@nicolas-grekas, @dmaicher)</li>
<li>bug #27727 [Routing] Disallow object usage inside Route (@paxal)</li>
<li>bug #27736 [Routing] fix too much greediness in host-matching regex (@nicolas-grekas)</li>
<li>bug #27747 [HttpFoundation] fix registration of session proxies (@nicolas-grekas)</li>
<li>bug #27754 [HttpFoundation] missing namespace for RedisProxy (@Bonfante)</li>
<li>bug #27722 Redesign the Debug error page in prod (@javiereguiluz)</li>
<li>bug #27716 [DI] fix dumping deprecated service in yaml (@nicolas-grekas)</li>
</ul>
<p><a href="https://github.com/symfony/symfony/releases/tag/v4.1.2" target="_blank" rel="noopener">发布公告</a></p>
<p>下载地址：</p>
<ul>
<li><a href="https://github.com/symfony/symfony/archive/v4.1.2.zip" target="_blank" rel="noopener">Source code (zip)</a></li>
<li><a href="https://github.com/symfony/symfony/archive/v4.1.2.tar.gz" target="_blank" rel="noopener">Source code (tar.gz)</a></li>
</ul>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Symfony 4.1.2 发布了，Symfony 是一款基于 MVC 架构的 PHP 框架。Symfony 致力于减少重复代码的编写，以加速 Web 应用的开发和维护。Symfony 与许多关系型数据库集成的也非常好，成本也较小。此外，Symfony 致力于在企业背景下创建健壮的应用，同时也给予了开发者强大的配置功能：从文件结构到外部目录，几乎所有的东西都可以自定义。Symfony 也捆绑了一些诸如测试、调试、文档生成等额外的工具来满足企业的开发过程。&lt;br&gt;
    
    </summary>
    
      <category term="PHP" scheme="http://www.iooeo.com/categories/PHP/"/>
    
    
      <category term="PHP" scheme="http://www.iooeo.com/tags/PHP/"/>
    
      <category term="Symfony" scheme="http://www.iooeo.com/tags/Symfony/"/>
    
  </entry>
  
  <entry>
    <title>HHVM 发布 3.27.1 和 3.24.8 版本</title>
    <link href="http://www.iooeo.com/2018/07/20/HHVM-%E5%8F%91%E5%B8%83-3-27-1-%E5%92%8C-3-24-8-%E7%89%88%E6%9C%AC/"/>
    <id>http://www.iooeo.com/2018/07/20/HHVM-发布-3-27-1-和-3-24-8-版本/</id>
    <published>2018-07-20T01:32:04.000Z</published>
    <updated>2018-07-20T01:34:20.171Z</updated>
    
    <content type="html"><![CDATA[<p>HHVM 是 Facebook 推出的用来执行 PHP 代码的虚拟机，它是一个 PHP 的 JIT(Just-In-Time) 编译器，同时具有产生快速代码和即时编译的优点。<br><a id="more"></a><br>HHVM 3.27.1 和 3.24.8 都是针对所在系列的 bug 修复版本，更新内容如下： </p>
<h2 id="3-27-1"><a href="#3-27-1" class="headerlink" title="3.27.1"></a>3.27.1</h2><ul>
<li>Fix stability issues when async if HHVM is linked against libevent2</li>
<li>Fix overly-strict parameter type variance for implementations of abstract methods</li>
<li>Fix as-you-type formatting when using recent versions of Nuclide</li>
<li>Fix formatting of comments that include tabs</li>
<li>Support debugging xbox requests</li>
<li>Regression: Support “{$$foo}” in PHP files</li>
<li>Regression: Support closures in anonymous classes</li>
<li>Regression: Fix typechecker hangs/crashes if there are many if (Shape::keyExists())refinements</li>
<li>Regression: Remove special meanings of some Hack keywords when file is PHP</li>
<li>Autocomplete: Remove ‘namespace fallback’ behavior for functions, which is no longer part of Hack</li>
<li>Autocomplete: Don’t trigger autocomplete after colons in case statements in namespaces</li>
<li>Autocomplete: Don’t trigger autocomplete after user attributes</li>
</ul>
<h2 id="3-24-8"><a href="#3-24-8" class="headerlink" title="3.24.8"></a>3.24.8</h2><ul>
<li>Fix stability issues when using async if HHVM is linked against libevent2</li>
<li>Fix overly-strict parameter type variance for implementations of abstract methods</li>
</ul>
<h2 id="发行说明"><a href="#发行说明" class="headerlink" title="发行说明"></a>发行说明</h2><ul>
<li><a href="http://hhvm.com/blog/2018/07/19/hhvm-3.27.1.html" target="_blank" rel="noopener">http://hhvm.com/blog/2018/07/19/hhvm-3.27.1.html</a></li>
<li><a href="https://github.com/facebook/hhvm/releases" target="_blank" rel="noopener">https://github.com/facebook/hhvm/releases</a></li>
</ul>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;HHVM 是 Facebook 推出的用来执行 PHP 代码的虚拟机，它是一个 PHP 的 JIT(Just-In-Time) 编译器，同时具有产生快速代码和即时编译的优点。&lt;br&gt;
    
    </summary>
    
      <category term="PHP" scheme="http://www.iooeo.com/categories/PHP/"/>
    
    
      <category term="PHP" scheme="http://www.iooeo.com/tags/PHP/"/>
    
      <category term="HHVM" scheme="http://www.iooeo.com/tags/HHVM/"/>
    
  </entry>
  
  <entry>
    <title>PHP 7.0.31, 7.1.20 和 7.2.8 正式发布，多项内容修复</title>
    <link href="http://www.iooeo.com/2018/07/18/PHP-7-0-31-7-1-20-%E5%92%8C-7-2-8-%E6%AD%A3%E5%BC%8F%E5%8F%91%E5%B8%83%EF%BC%8C%E5%A4%9A%E9%A1%B9%E5%86%85%E5%AE%B9%E4%BF%AE%E5%A4%8D/"/>
    <id>http://www.iooeo.com/2018/07/18/PHP-7-0-31-7-1-20-和-7-2-8-正式发布，多项内容修复/</id>
    <published>2018-07-18T09:39:02.000Z</published>
    <updated>2018-07-18T09:40:10.162Z</updated>
    
    <content type="html"><![CDATA[<p>PHP 7.0.31, 7.1.20, 7.2.8 正式发布了。PHP（PHP：Hypertext Preprocessor）是一种在电脑上执行的脚本语言，主要是用途在于处理动态网页，也包含了命令列执行接口（command line interface），或者产生图形使用者接口（GUI）程式。<br><a id="more"></a><br>版本主要还是修复 bug，改进日志如下：</p>
<p>PHP 7.0.31</p>
<ul>
<li><p>Exif:<br>. Fixed bug #76423 (Int Overflow lead to Heap OverFlow in<br>  exif_thumbnail_extract of exif.c). (Stas)<br>. Fixed bug #76557 (heap-buffer-overflow (READ of size 48) while reading exif<br>  data). (Stas)</p>
</li>
<li><p>Win32:<br>. Fixed bug #76459 (windows linkinfo lacks openbasedir check). (Anatol)</p>
</li>
</ul>
<p>PHP 7.1.20</p>
<ul>
<li><p>Core:<br>. Fixed bug #76534 (PHP hangs on ‘illegal string offset on string references<br>  with an error handler). (Laruence)<br>. Fixed bug #76502 (Chain of mixed exceptions and errors does not serialize<br>  properly). (Nikita)</p>
</li>
<li><p>Date:<br>. Fixed bug #76462 (Undefined property: DateInterval::$f). (Anatol)</p>
</li>
<li><p>FPM:<br>. Fixed bug #73342 (Vulnerability in php-fpm by changing stdin to<br>  non-blocking). (Nikita)</p>
</li>
<li><p>GMP:<br>. Fixed bug #74670 (Integer Underflow when unserializing GMP and possible<br>  other classes). (Nikita)</p>
</li>
<li><p>intl:<br>. Fixed bug #76556 (get_debug_info handler for BreakIterator shows wrong<br>  type). (cmb)</p>
</li>
<li><p>mbstring:<br>. Fixed bug #76532 (Integer overflow and excessive memory usage<br>  in mb_strimwidth). (MarcusSchwarz)</p>
</li>
<li><p>PGSQL:<br>. Fixed bug #76548 (pg_fetch_result did not fetch the next row). (Anatol)</p>
</li>
<li><p>phpdbg:<br>. Fix arginfo wrt. optional/required parameters. (cmb)</p>
</li>
<li><p>Reflection:<br>. Fixed bug #76536 (PHP crashes with core dump when throwing exception in<br>  error handler). (Laruence)<br>. Fixed bug #75231 (ReflectionProperty#getValue() incorrectly works with<br>  inherited classes). (Nikita)</p>
</li>
<li><p>Standard:<br>. Fixed bug #76505 (array_merge_recursive() is duplicating sub-array keys).<br>  (Laruence)<br>. Fixed bug #71848 (getimagesize with $imageinfo returns false). (cmb)</p>
</li>
</ul>
<p>PHP 7.2.8</p>
<ul>
<li><p>Core:<br>. Fixed bug #76534 (PHP hangs on ‘illegal string offset on string references<br>  with an error handler). (Laruence)<br>. Fixed bug #76520 (Object creation leaks memory when executed over HTTP).<br>  (Nikita)<br>. Fixed bug #76502 (Chain of mixed exceptions and errors does not serialize<br>  properly). (Nikita)</p>
</li>
<li><p>Date:<br>. Fixed bug #76462 (Undefined property: DateInterval::$f). (Anatol)</p>
</li>
<li><p>EXIF:<br>. Fixed bug #76409 (heap use after free in _php_stream_free). (cmb)<br>. Fixed bug #76423 (Int Overflow lead to Heap OverFlow in<br>  exif_thumbnail_extract of exif.c). (Stas)<br>. Fixed bug #76557 (heap-buffer-overflow (READ of size 48) while reading exif<br>  data). (Stas)</p>
</li>
<li><p>FPM:<br>. Fixed bug #73342 (Vulnerability in php-fpm by changing stdin to<br>  non-blocking). (Nikita)</p>
</li>
<li><p>GMP:<br>. Fixed bug #74670 (Integer Underflow when unserializing GMP and possible<br>  other classes). (Nikita)</p>
</li>
<li><p>intl:<br>. Fixed bug #76556 (get_debug_info handler for BreakIterator shows wrong<br>  type). (cmb)</p>
</li>
<li><p>mbstring:<br>. Fixed bug #76532 (Integer overflow and excessive memory usage<br>  in mb_strimwidth). (MarcusSchwarz)</p>
</li>
<li><p>Opcache:<br>. Fixed bug #76477 (Opcache causes empty return value).<br>  (Nikita, Laruence)</p>
</li>
<li><p>PGSQL:<br>. Fixed bug #76548 (pg_fetch_result did not fetch the next row). (Anatol)</p>
</li>
<li><p>phpdbg:<br>. Fix arginfo wrt. optional/required parameters. (cmb)</p>
</li>
<li><p>Reflection:<br>. Fixed bug #76536 (PHP crashes with core dump when throwing exception in<br>  error handler). (Laruence)<br>. Fixed bug #75231 (ReflectionProperty#getValue() incorrectly works with<br>  inherited classes). (Nikita)</p>
</li>
<li><p>Standard:<br>. Fixed bug #76505 (array_merge_recursive() is duplicating sub-array keys).<br>  (Laruence)<br>. Fixed bug #71848 (getimagesize with $imageinfo returns false). (cmb)</p>
</li>
<li><p>Win32:<br>. Fixed bug #76459 (windows linkinfo lacks openbasedir check). (Anatol)</p>
</li>
<li><p>ZIP:<br>. Fixed bug #76461 (OPSYS_Z_CPM defined instead of OPSYS_CPM).<br>  (Dennis Birkholz, Remi)</p>
</li>
</ul>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;PHP 7.0.31, 7.1.20, 7.2.8 正式发布了。PHP（PHP：Hypertext Preprocessor）是一种在电脑上执行的脚本语言，主要是用途在于处理动态网页，也包含了命令列执行接口（command line interface），或者产生图形使用者接口（GUI）程式。&lt;br&gt;
    
    </summary>
    
      <category term="PHP" scheme="http://www.iooeo.com/categories/PHP/"/>
    
    
      <category term="PHP" scheme="http://www.iooeo.com/tags/PHP/"/>
    
  </entry>
  
  <entry>
    <title>CakePHP 3.6.7 发布，bug 修复版本</title>
    <link href="http://www.iooeo.com/2018/07/09/CakePHP-3-6-7-%E5%8F%91%E5%B8%83%EF%BC%8Cbug-%E4%BF%AE%E5%A4%8D%E7%89%88%E6%9C%AC/"/>
    <id>http://www.iooeo.com/2018/07/09/CakePHP-3-6-7-发布，bug-修复版本/</id>
    <published>2018-07-09T01:40:05.000Z</published>
    <updated>2018-07-09T01:43:31.809Z</updated>
    
    <content type="html"><![CDATA[<p>CakePHP 3.6.7 发布了。CakePHP 是一个运用了诸如 ActiveRecord、Association Data Mapping、Front Controller 和 MVC 等著名设计模式的快速开发框架。该项目主要目标是提供一个可以让各种层次的 PHP 开发人员快速地开发出健壮的 Web 应用，而 又不失灵活性。<br><a id="more"></a><br>更新内容如下：</p>
<ul>
<li>Improved deprecation messages.</li>
<li>Http\Client now ignores invalid cookie expiration dates.</li>
<li>Http\Client now drops invalid/empty Set-Cookie header values.</li>
<li>Data read from cakephp-plugins.php is reloaded as neccessary in test suites. Fixing unknown plugin errors.</li>
<li>Email::setAttachments() no longer emits an error when data key is used without a mimetype.</li>
<li>Redirect routes no longer apply the application subdirectory twice.</li>
<li>Multiple checkbox form widgets now use checkboxWrapper instead of radioWrapper for their wrapping template.</li>
<li>Debugger::printVar() now forces its content to be ltr, improving readability in rtl documents.</li>
<li>Routing key sub-pattern checks in reverser routing now use unicode regular expressions.</li>
<li>An exception is now raised when libicu is missing a requested timezone.</li>
<li>Console subcommand help now displays the subcommand description when no subcommand parser has been defined.</li>
<li>Missing Plugin error pages now recommend the use of addPlugin().</li>
</ul>
<p>下载地址：</p>
<ul>
<li><a href="https://github.com/cakephp/cakephp/releases/download/3.6.7/cakephp-3-6-7.zip" target="_blank" rel="noopener">cakephp-3-6-7.zip</a></li>
<li><a href="https://github.com/cakephp/cakephp/archive/3.6.7.zip" target="_blank" rel="noopener">Source code (zip)</a></li>
<li><a href="https://github.com/cakephp/cakephp/archive/3.6.7.tar.gz" target="_blank" rel="noopener">Source code (tar.gz)</a></li>
</ul>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;CakePHP 3.6.7 发布了。CakePHP 是一个运用了诸如 ActiveRecord、Association Data Mapping、Front Controller 和 MVC 等著名设计模式的快速开发框架。该项目主要目标是提供一个可以让各种层次的 PHP 开发人员快速地开发出健壮的 Web 应用，而 又不失灵活性。&lt;br&gt;
    
    </summary>
    
      <category term="PHP" scheme="http://www.iooeo.com/categories/PHP/"/>
    
    
      <category term="PHP" scheme="http://www.iooeo.com/tags/PHP/"/>
    
      <category term="CakePHP" scheme="http://www.iooeo.com/tags/CakePHP/"/>
    
  </entry>
  
  <entry>
    <title>WordPress 4.9.7 发布，修复安全漏洞</title>
    <link href="http://www.iooeo.com/2018/07/09/WordPress-4-9-7-%E5%8F%91%E5%B8%83%EF%BC%8C%E4%BF%AE%E5%A4%8D%E5%AE%89%E5%85%A8%E6%BC%8F%E6%B4%9E/"/>
    <id>http://www.iooeo.com/2018/07/09/WordPress-4-9-7-发布，修复安全漏洞/</id>
    <published>2018-07-09T01:36:19.000Z</published>
    <updated>2018-07-09T01:38:26.183Z</updated>
    
    <content type="html"><![CDATA[<p>WordPress 4.9.7发布了，修复了两个有关任意文件删除的安全漏洞。除此之外，还提供了其他17个漏洞的修复程序，以提高稳定性。<br><a id="more"></a><br>RIPS Tech 在博客文章中写道：利用漏洞使攻击者能够删除 WordPress 安装的任何文件。如果没有可用的当前备份可能带来灾难性的后果，攻击者可以利用任意文件删除的能力来避开一些安全措施并在 Web 服务器上执行任意代码。</p>
<p>主要修复的问题包括：</p>
<ul>
<li>Taxonomy: Improve cache handling for term queries.</li>
<li>Posts, Post Types: Clear post password cookie when logging out.</li>
<li>Widgets: Allow basic HTML tags in sidebar descriptions on Widgets admin screen.</li>
<li>Community Events Dashboard: Always show the nearest WordCamp if one is coming up, even if there are multiple Meetups happening first.</li>
<li>Privacy: Make sure default privacy policy content does not cause a fatal error when flushing rewrite rules outside of the admin context.</li>
</ul>
<p>下载地址：</p>
<ul>
<li><a href="https://wordpress.org/download/" target="_blank" rel="noopener">https://wordpress.org/download/</a> </li>
</ul>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;WordPress 4.9.7发布了，修复了两个有关任意文件删除的安全漏洞。除此之外，还提供了其他17个漏洞的修复程序，以提高稳定性。&lt;br&gt;
    
    </summary>
    
      <category term="PHP" scheme="http://www.iooeo.com/categories/PHP/"/>
    
    
      <category term="PHP" scheme="http://www.iooeo.com/tags/PHP/"/>
    
      <category term="WordPress" scheme="http://www.iooeo.com/tags/WordPress/"/>
    
  </entry>
  
  <entry>
    <title>ThinkPHP 5.1.18 版本发布，完善 Swoole/Workerman 支持</title>
    <link href="http://www.iooeo.com/2018/07/02/ThinkPHP-5-1-18-%E7%89%88%E6%9C%AC%E5%8F%91%E5%B8%83%EF%BC%8C%E5%AE%8C%E5%96%84-Swoole-Workerman-%E6%94%AF%E6%8C%81/"/>
    <id>http://www.iooeo.com/2018/07/02/ThinkPHP-5-1-18-版本发布，完善-Swoole-Workerman-支持/</id>
    <published>2018-07-02T07:31:24.000Z</published>
    <updated>2018-07-02T07:42:34.930Z</updated>
    
    <content type="html"><![CDATA[<p>V5.1.18版本主要完善了对<code>Swoole</code>和<code>Workerman</code>的<code>HttpServer</code>运行支持，改进<code>Request</code>类，并修正了一些已知的问题。<br><a id="more"></a></p>
<h3 id="主要更新"><a href="#主要更新" class="headerlink" title="主要更新"></a>主要更新</h3><ul>
<li>改进关联<code>append</code>方法的处理</li>
<li>路由初始化和检测方法分离</li>
<li>修正<code>destroy</code>方法强制删除</li>
<li><code>app_init</code>钩子位置移入<code>run</code>方法</li>
<li><code>think-swoole</code>扩展更新到2.0版本</li>
<li><code>think-worker</code>扩展更新到2.0版本</li>
<li>改进Url生成的域名自动识别</li>
<li><code>Request</code>类增加<code>setPathinfo</code>方法和<code>setHost</code>方法</li>
<li><code>Request</code>类增加<code>withGet</code>/<code>withPost</code>/<code>withHeader</code>/<code>withServer</code>/<code>withCookie</code>/<code>withEnv</code>方法进行赋值操作</li>
<li>Route类改进<code>host</code>属性的获取</li>
<li>解决注解路由配置不生效的问题</li>
<li>取消Test日志驱动，改为使用<code>close</code>设置关闭全局日志写入</li>
<li>修正路由的<code>response</code>参数</li>
<li>修正204响应输出的判断</li>
</ul>
<p>从<code>5.1.17</code>版本可以无缝升级到<code>5.1.18</code>。由于取消了Test日志驱动，如果使用了Test日志驱动，请在log.php中改为使用下面的配置全局关闭。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">&apos;close&apos;  =&gt; true,</div></pre></td></tr></table></figure></p>
<h3 id="Swoole-Workerman支持"><a href="#Swoole-Workerman支持" class="headerlink" title="Swoole/Workerman支持"></a>Swoole/Workerman支持</h3><p>该版本开始，可以更好的支持Swoole和Workerman的HTTPServer运行。<br>在你的项目根目录下面，安装或者更新think-swoole（或者think-worker）扩展<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">$composer require topthink/think-swoole</div><div class="line">// 或者</div><div class="line">$composer require topthink/think-worker</div></pre></td></tr></table></figure></p>
<p>然后启动HttpServer服务<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">$php think swoole</div><div class="line">// 或者</div><div class="line">$php think worker</div></pre></td></tr></table></figure></p>
<p>注意：swoole不支持windows服务器</p>
<p>官方<a href="https://www.kancloud.cn/manual/thinkphp5_1/content" target="_blank" rel="noopener">完全开发手册</a>已经同步更新！</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;V5.1.18版本主要完善了对&lt;code&gt;Swoole&lt;/code&gt;和&lt;code&gt;Workerman&lt;/code&gt;的&lt;code&gt;HttpServer&lt;/code&gt;运行支持，改进&lt;code&gt;Request&lt;/code&gt;类，并修正了一些已知的问题。&lt;br&gt;
    
    </summary>
    
      <category term="PHP" scheme="http://www.iooeo.com/categories/PHP/"/>
    
      <category term="ThinkPHP" scheme="http://www.iooeo.com/categories/PHP/ThinkPHP/"/>
    
    
      <category term="PHP" scheme="http://www.iooeo.com/tags/PHP/"/>
    
      <category term="ThinkPHP" scheme="http://www.iooeo.com/tags/ThinkPHP/"/>
    
  </entry>
  
  <entry>
    <title>Day01 - 初识Python</title>
    <link href="http://www.iooeo.com/2018/06/26/Day01-%E5%88%9D%E8%AF%86Python/"/>
    <id>http://www.iooeo.com/2018/06/26/Day01-初识Python/</id>
    <published>2018-06-26T09:09:41.000Z</published>
    <updated>2018-06-26T09:28:51.738Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Day01-初识Python"><a href="#Day01-初识Python" class="headerlink" title="Day01 - 初识Python"></a>Day01 - 初识Python</h2><h3 id="Python简介"><a href="#Python简介" class="headerlink" title="Python简介"></a>Python简介</h3><h4 id="Python的历史"><a href="#Python的历史" class="headerlink" title="Python的历史"></a>Python的历史</h4><ol>
<li>1989年圣诞节：Guido von Rossum开始写Python语言的编译器。</li>
<li>1991年2月：第一个Python编译器（同时也是解释器）诞生，它是用C语言实现的（后面又出现了Java和C#实现的版本Jython和IronPython，以及PyPy、Brython、Pyston等其他实现），可以调用C语言的库函数。在最早的版本中，Python已经提供了对“类”，“函数”，“异常处理”等构造块的支持，同时提供了“列表”和“字典”等核心数据类型，同时支持以模块为基础的拓展系统。</li>
<li>1994年1月：Python 1.0正式发布。</li>
<li>2000年10月16日：Python 2.0发布，增加了实现完整的<a href="https://zh.wikipedia.org/wiki/%E5%9E%83%E5%9C%BE%E5%9B%9E%E6%94%B6_(%E8%A8%88%E7%AE%97%E6%A9%9F%E7%A7%91%E5%AD%B8" target="_blank" rel="noopener">垃圾回收</a>)，并且支持<a href="https://zh.wikipedia.org/wiki/Unicode" target="_blank" rel="noopener">Unicode</a>。与此同时，Python的整个开发过程更加透明，社区对开发进度的影响逐渐扩大，生态圈开始慢慢形成。</li>
<li>2008年12月3日：Python 3.0发布，此版不完全兼容之前的Python代码，不过很多新特性后来也被移植到旧的Python 2.6/2.7版本，因为目前还有公司在项目和运维中使用Python 2.x版本的代码。</li>
</ol>
<p>目前我们使用的Python 3.6.x的版本是在2016年的12月23日发布的，Python的版本号分为三段，形如A.B.C。其中A表示大版本号，一般当整体重写，或出现不向后兼容的改变时，增加A；B表示功能更新，出现新功能时增加B；C表示小的改动（如修复了某个Bug），只要有修改就增加C。如果对Python的历史感兴趣，可以查看一篇名为<a href="http://www.cnblogs.com/vamei/archive/2013/02/06/2892628.html" target="_blank" rel="noopener">《Python简史》</a>的博文。</p>
<a id="more"></a>
<h4 id="Python的优缺点"><a href="#Python的优缺点" class="headerlink" title="Python的优缺点"></a>Python的优缺点</h4><p>Python的优点很多，简单的可以总结为以下几点。</p>
<ol>
<li>简单和明确，做一件事只有一种方法。</li>
<li>学习曲线低，与其他很多语言比上手更容易。</li>
<li>开放源代码，拥有强大的社区和生态圈。</li>
<li>解释型语言，完美的平台可移植性。</li>
<li>支持两种主流的编程范式，可以使用面向对象和函数式编程。</li>
<li>可扩展性和可嵌入性，可以调用C/C++代码也可以在C/C++中调用。</li>
<li>代码规范程度高，可读性强，适合有代码洁癖和强迫症的人群。</li>
</ol>
<p>Python的缺点主要集中在以下几点。</p>
<ol>
<li>执行效率低下，因此计算密集型任务可以由C/C++编写。</li>
<li>代码无法加密，但是现在的公司很多都不是卖软件而是卖服务，这个问题慢慢会淡化。</li>
<li>在开发时可以选择的框架太多，有选择的地方就有错误。</li>
</ol>
<h4 id="Python的应用领域"><a href="#Python的应用领域" class="headerlink" title="Python的应用领域"></a>Python的应用领域</h4><p>目前Python在云基础设施、DevOps、网络爬虫开发、数据分析挖掘、机器学习等领域都有着广泛的应用，因此也产生了服务器开发、数据接口开发、自动化运维、科学计算和数据可视化、聊天机器人开发、图像识别和处理等一系列的职位。</p>
<h3 id="搭建编程环境"><a href="#搭建编程环境" class="headerlink" title="搭建编程环境"></a>搭建编程环境</h3><h4 id="Windows环境"><a href="#Windows环境" class="headerlink" title="Windows环境"></a>Windows环境</h4><p>可以在<a href="https://www.python.org" target="_blank" rel="noopener">Python的官方网站</a>下载到Python的Windows安装程序（exe文件），需要注意的是如果在Windows 7环境下安装需要先安装Service Pack 1补丁包（可以通过一些工具软件自动安装系统补丁的功能来安装），安装过程建议勾选“Add Python 3.6 to PATH”（将Python 3.6添加到PATH环境变量）并选择自定义安装，在设置“Optional Features”界面最好将“pip”、“tcl/tk”、“Python test suite”等项全部勾选上。强烈建议使用自定义的安装路径并保证路径中没有中文。安装完成会看到“Setup was successful”的提示，但是在启动Python环境时可能会因为缺失一些动态链接库文件而导致Python解释器无法运行，常见的问题主要是api-ms-win-crt*.dll缺失以及更新DirectX之后导致某些动态链接库文件缺失，前者可以参照<a href="">《api-ms-win-crt*.dll缺失原因分析和解决方法》</a>一文讲解的方法进行处理或者直接在<a href="https://www.microsoft.com/zh-cn/download/details.aspx?id=48145" target="_blank" rel="noopener">微软官网</a>下载Visual C++ Redistributable for Visual Studio 2015文件进行修复，后者可以下载一个DirectX修复工具进行修复。</p>
<h4 id="Linux环境"><a href="#Linux环境" class="headerlink" title="Linux环境"></a>Linux环境</h4><p>Linux环境自带了Python 2.x版本，但是如果要更新到3.x的版本，可以在<a href="https://www.python.org" target="_blank" rel="noopener">Python的官方网站</a>下载Python的源代码并通过源代码构建安装的方式进行安装，具体的步骤如下所示。</p>
<p>安装依赖库（因为没有这些依赖库可能在源代码构件安装时因为缺失底层依赖库而失败）。</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">yum -y install zlib-devel bzip2-devel openssl-devel ncurses-devel sqlite-devel readline-devel tk-devel gdbm-devel db4-devel libpcap-devel xz-devel</div></pre></td></tr></table></figure>
<p>下载Python源代码并解压缩到指定目录。</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">wget https://www.python.org/ftp/python/3.6.1/Python-3.6.1.tar.xz</div><div class="line">xz -d Python-3.6.1.tar.xz</div><div class="line">tar -xvf Python-3.6.1.tar</div></pre></td></tr></table></figure>
<p>切换至Python源代码目录并执行下面的命令进行配置和安装。</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">cd Python-3.6.1</div><div class="line">./configure --prefix=/usr/local/python3.6 --enable-optimizations</div><div class="line">make &amp;&amp; make install</div></pre></td></tr></table></figure>
<p>创建软链接，这样就可以直接通过python3直接启动Python解释器。</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">ln -s /usr/local/python3.6/bin/python3 /usr/bin/python3</div></pre></td></tr></table></figure>
<h4 id="MacOS环境"><a href="#MacOS环境" class="headerlink" title="MacOS环境"></a>MacOS环境</h4><p>MacOS也是自带了Python 2.x版本的，可以通过<a href="https://www.python.org" target="_blank" rel="noopener">Python的官方网站</a>提供的安装文件（pkg文件）安装3.x的版本。默认安装完成后，可以通过在终端执行python命令来启动2.x版本的Python解释器，可以通过执行python3命令来启动3.x版本的Python解释器，当然也可以通过重新设置软链接来修改启动Python解释器的命令。</p>
<h3 id="从终端运行Python程序"><a href="#从终端运行Python程序" class="headerlink" title="从终端运行Python程序"></a>从终端运行Python程序</h3><h4 id="确认Python的版本"><a href="#确认Python的版本" class="headerlink" title="确认Python的版本"></a>确认Python的版本</h4><p>在终端或命令行提示符中键入下面的命令。</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">python --version</div></pre></td></tr></table></figure>
<p>当然也可以先输入python进入交互式环境，再执行以下的代码检查Python的版本。</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">import</span> sys</div><div class="line"></div><div class="line">print(sys.version_info)</div><div class="line">print(sys.version)</div></pre></td></tr></table></figure>
<h4 id="编写Python源代码"><a href="#编写Python源代码" class="headerlink" title="编写Python源代码"></a>编写Python源代码</h4><p>可以用文本编辑工具（推荐使用Sublime、Atom、TextMate、VSCode等高级文本编辑工具）编写Python源代码并将其命名为hello.py保存起来，代码内容如下所示。</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">print(<span class="string">'hello, world!'</span>)</div></pre></td></tr></table></figure>
<h4 id="运行程序"><a href="#运行程序" class="headerlink" title="运行程序"></a>运行程序</h4><p>切换到源代码所在的目录并执行下面的命令，看看屏幕上是否输出了”hello, world!”。</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">python hello.py</div></pre></td></tr></table></figure>
<h3 id="代码中的注释"><a href="#代码中的注释" class="headerlink" title="代码中的注释"></a>代码中的注释</h3><p>注释是编程语言的一个重要组成部分，用于在源代码中解释代码的作用从而增强程序的可读性和可维护性，当然也可以将源代码中不需要参与运行的代码段通过注释来去掉，这一点在调试程序的时候经常用到。注释在随源代码进入预处理器或编译时会被移除，不会在目标代码中保留也不会影响程序的执行结果。</p>
<ol>
<li>单行注释 - 以#和空格开头的部分</li>
<li>多行注释 - 三个引号开头，三个引号结尾</li>
</ol>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div></pre></td><td class="code"><pre><div class="line"><span class="string">"""</span></div><div class="line"></div><div class="line">第一个Python程序 - hello, world!</div><div class="line">向伟大的Dennis M. Ritchie先生致敬</div><div class="line"></div><div class="line">Version: 0.1</div><div class="line">Author: 骆昊</div><div class="line">Date: 2018-02-26</div><div class="line"></div><div class="line">"""</div><div class="line"></div><div class="line">print(<span class="string">'hello, world!'</span>)</div><div class="line"><span class="comment"># print("你好,世界！")</span></div><div class="line">print(<span class="string">'你好'</span>, <span class="string">'世界'</span>)</div><div class="line">print(<span class="string">'hello'</span>, <span class="string">'world'</span>, sep=<span class="string">', '</span>, end=<span class="string">'!'</span>)</div><div class="line">print(<span class="string">'goodbye, world'</span>, end=<span class="string">'!\n'</span>)</div></pre></td></tr></table></figure>
<h3 id="其他工具介绍"><a href="#其他工具介绍" class="headerlink" title="其他工具介绍"></a>其他工具介绍</h3><h4 id="IDLE-自带的集成开发工具"><a href="#IDLE-自带的集成开发工具" class="headerlink" title="IDLE - 自带的集成开发工具"></a>IDLE - 自带的集成开发工具</h4><p>IDLE是安装Python环境时自带的集成开发工具，如下图所示。但是由于IDLE的用户体验并不是那么好所以很少在实际开发中被采用。</p>
<p><img src="http://ogpq2zwg5.bkt.clouddn.com/python-idle.png" alt=""></p>
<h4 id="IPython-更好的交互式编程工具"><a href="#IPython-更好的交互式编程工具" class="headerlink" title="IPython - 更好的交互式编程工具"></a>IPython - 更好的交互式编程工具</h4><p>IPython是一种基于Python的交互式解释器。相较于原生的Python Shell，IPython提供了更为强大的编辑和交互功能。可以通过Python的包管理工具pip安装IPython和Jupyter，具体的操作如下所示。</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">pip install ipython jupyter</div></pre></td></tr></table></figure>
<p>或者</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">python -m pip install ipython jupyter</div></pre></td></tr></table></figure>
<p>安装成功后，可以通过下面的ipython命令启动IPython，如下图所示。</p>
<p><img src="http://ogpq2zwg5.bkt.clouddn.com/python-ipython.png" alt=""></p>
<p>当然我们也可以通过Jupyter运行名为notebook的项目在浏览器窗口中进行交互式操作。</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">jupyter notebook</div></pre></td></tr></table></figure>
<p><img src="http://ogpq2zwg5.bkt.clouddn.com/python-jupyter-1.png" alt=""></p>
<p><img src="http://ogpq2zwg5.bkt.clouddn.com/python-jupyter-2.png" alt=""></p>
<h4 id="Sublime-文本编辑神器"><a href="#Sublime-文本编辑神器" class="headerlink" title="Sublime - 文本编辑神器"></a>Sublime - 文本编辑神器</h4><p><img src="http://ogpq2zwg5.bkt.clouddn.com/python-sublime.png" alt=""></p>
<ul>
<li><p>首先可以通过<a href="https://www.sublimetext.com/" target="_blank" rel="noopener">官方网站</a>下载安装程序安装Sublime 3或Sublime 2。</p>
</li>
<li><p>安装包管理工具。通过快捷键Ctrl+`或者在View菜单中选择Show Console打开控制台，输入下面的代码。</p>
<ul>
<li>Sublime 3</li>
</ul>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">import</span>  urllib.request,os;pf=<span class="string">'Package Control.sublime-package'</span>;ipp=sublime.installed_packages_path();urllib.request.install_opener(urllib.request.build_opener(urllib.request.ProxyHandler()));open(os.path.join(ipp,pf),<span class="string">'wb'</span>).write(urllib.request.urlopen(<span class="string">'http://sublime.wbond.net/'</span>+pf.replace(<span class="string">' '</span>,<span class="string">'%20'</span>)).read())</div></pre></td></tr></table></figure>
<ul>
<li>Sublime 2</li>
</ul>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">import</span>  urllib2,os;pf=<span class="string">'Package Control.sublime-package'</span>;ipp=sublime.installed_packages_path();os.makedirs(ipp)ifnotos.path.exists(ipp)elseNone;urllib2.install_opener(urllib2.build_opener(urllib2.ProxyHandler()));open(os.path.join(ipp,pf),<span class="string">'wb'</span>).write(urllib2.urlopen(<span class="string">'http://sublime.wbond.net/'</span>+pf.replace(<span class="string">' '</span>,<span class="string">'%20'</span>)).read());print(<span class="string">'Please restart Sublime Text to finish installation'</span>)</div></pre></td></tr></table></figure>
</li>
<li><p>安装插件。通过Preference菜单的Package Control或快捷键Ctrl+Shift+P打开命令面板，在面板中输入Install Package就可以找到安装插件的工具，然后再查找需要的插件。我们推荐大家安装以下几个插件。</p>
<ul>
<li>SublimeCodeIntel - 代码自动补全工具插件</li>
<li>Emmet - 前端开发代码模板插件</li>
<li>Git - 版本控制工具插件</li>
<li>Python PEP8 Autoformat - PEP8规范自动格式化插件</li>
<li>ConvertToUTF8 - 将本地编码转换为UTF-8</li>
</ul>
</li>
</ul>
<h4 id="PyCharm-Python开发神器"><a href="#PyCharm-Python开发神器" class="headerlink" title="PyCharm - Python开发神器"></a>PyCharm - Python开发神器</h4><p>PyCharm的安装、配置和使用我们在后面会进行介绍。</p>
<p><img src="http://ogpq2zwg5.bkt.clouddn.com/python-pycharm.png" alt=""></p>
<h3 id="练习"><a href="#练习" class="headerlink" title="练习"></a>练习</h3><ol>
<li><p>在Python交互环境中下面的代码查看结果并将内容翻译成中文。</p>
 <figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div></pre></td><td class="code"><pre><div class="line">import this</div><div class="line"></div><div class="line">Beautiful is better than ugly.</div><div class="line">Explicit is better than implicit.</div><div class="line">Simple is better than complex.</div><div class="line">Complex is better than complicated.</div><div class="line">Flat is better than nested.</div><div class="line">Sparse is better than dense.</div><div class="line">Readability counts.</div><div class="line">Special cases aren't special enough to break the rules.</div><div class="line">Although practicality beats purity.</div><div class="line">Errors should never pass silently.</div><div class="line">Unless explicitly silenced.</div><div class="line">In the face of ambiguity, refuse the temptation to guess.</div><div class="line">There should be one-- and preferably only one --obvious way to do it.</div><div class="line">Although that way may not be obvious at first unless you're Dutch.</div><div class="line">Now is better than never.</div><div class="line">Although never is often better than *right* now.</div><div class="line">If the implementation is hard to explain, it's a bad idea.</div><div class="line">If the implementation is easy to explain, it may be a good idea.</div><div class="line">Namespaces are one honking great idea -- let's do more of those!</div></pre></td></tr></table></figure>
</li>
<li><p>学习使用turtle在屏幕上绘制图形。</p>
 <figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">import</span> turtle</div><div class="line"></div><div class="line">turtle.pensize(<span class="number">4</span>)</div><div class="line">turtle.pencolor(<span class="string">'red'</span>)</div><div class="line">turtle.forward(<span class="number">100</span>)</div><div class="line">turtle.right(<span class="number">90</span>)</div><div class="line">turtle.forward(<span class="number">100</span>)</div><div class="line">turtle.right(<span class="number">90</span>)</div><div class="line">turtle.forward(<span class="number">100</span>)</div><div class="line">turtle.right(<span class="number">90</span>)</div><div class="line">turtle.forward(<span class="number">100</span>)</div><div class="line">turtle.mainloop()</div></pre></td></tr></table></figure>
</li>
</ol>
]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;Day01-初识Python&quot;&gt;&lt;a href=&quot;#Day01-初识Python&quot; class=&quot;headerlink&quot; title=&quot;Day01 - 初识Python&quot;&gt;&lt;/a&gt;Day01 - 初识Python&lt;/h2&gt;&lt;h3 id=&quot;Python简介&quot;&gt;&lt;a href=&quot;#Python简介&quot; class=&quot;headerlink&quot; title=&quot;Python简介&quot;&gt;&lt;/a&gt;Python简介&lt;/h3&gt;&lt;h4 id=&quot;Python的历史&quot;&gt;&lt;a href=&quot;#Python的历史&quot; class=&quot;headerlink&quot; title=&quot;Python的历史&quot;&gt;&lt;/a&gt;Python的历史&lt;/h4&gt;&lt;ol&gt;
&lt;li&gt;1989年圣诞节：Guido von Rossum开始写Python语言的编译器。&lt;/li&gt;
&lt;li&gt;1991年2月：第一个Python编译器（同时也是解释器）诞生，它是用C语言实现的（后面又出现了Java和C#实现的版本Jython和IronPython，以及PyPy、Brython、Pyston等其他实现），可以调用C语言的库函数。在最早的版本中，Python已经提供了对“类”，“函数”，“异常处理”等构造块的支持，同时提供了“列表”和“字典”等核心数据类型，同时支持以模块为基础的拓展系统。&lt;/li&gt;
&lt;li&gt;1994年1月：Python 1.0正式发布。&lt;/li&gt;
&lt;li&gt;2000年10月16日：Python 2.0发布，增加了实现完整的&lt;a href=&quot;https://zh.wikipedia.org/wiki/%E5%9E%83%E5%9C%BE%E5%9B%9E%E6%94%B6_(%E8%A8%88%E7%AE%97%E6%A9%9F%E7%A7%91%E5%AD%B8&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;垃圾回收&lt;/a&gt;)，并且支持&lt;a href=&quot;https://zh.wikipedia.org/wiki/Unicode&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Unicode&lt;/a&gt;。与此同时，Python的整个开发过程更加透明，社区对开发进度的影响逐渐扩大，生态圈开始慢慢形成。&lt;/li&gt;
&lt;li&gt;2008年12月3日：Python 3.0发布，此版不完全兼容之前的Python代码，不过很多新特性后来也被移植到旧的Python 2.6/2.7版本，因为目前还有公司在项目和运维中使用Python 2.x版本的代码。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;目前我们使用的Python 3.6.x的版本是在2016年的12月23日发布的，Python的版本号分为三段，形如A.B.C。其中A表示大版本号，一般当整体重写，或出现不向后兼容的改变时，增加A；B表示功能更新，出现新功能时增加B；C表示小的改动（如修复了某个Bug），只要有修改就增加C。如果对Python的历史感兴趣，可以查看一篇名为&lt;a href=&quot;http://www.cnblogs.com/vamei/archive/2013/02/06/2892628.html&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;《Python简史》&lt;/a&gt;的博文。&lt;/p&gt;
    
    </summary>
    
      <category term="python" scheme="http://www.iooeo.com/categories/python/"/>
    
    
      <category term="python" scheme="http://www.iooeo.com/tags/python/"/>
    
  </entry>
  
  <entry>
    <title>Symfony 4.1.1 发布，PHP 框架与可重用 PHP 组件集</title>
    <link href="http://www.iooeo.com/2018/06/26/Symfony-4-1-1-%E5%8F%91%E5%B8%83%EF%BC%8CPHP-%E6%A1%86%E6%9E%B6%E4%B8%8E%E5%8F%AF%E9%87%8D%E7%94%A8-PHP-%E7%BB%84%E4%BB%B6%E9%9B%86/"/>
    <id>http://www.iooeo.com/2018/06/26/Symfony-4-1-1-发布，PHP-框架与可重用-PHP-组件集/</id>
    <published>2018-06-26T01:48:20.000Z</published>
    <updated>2018-06-26T01:52:13.636Z</updated>
    
    <content type="html"><![CDATA[<p>Symfony 4.1.1 发布了，Symfony 是一款基于 MVC 架构的 PHP 框架。Symfony 致力于减少重复代码的编写，以加速 Web 应用的开发和维护。Symfony 与许多关系型数据库集成的也非常好，成本也较小。此外，Symfony 致力于在企业背景下创建健壮的应用，同时也给予了开发者强大的配置功能：从文件结构到外部目录，几乎所有的东西都可以自定义。Symfony 也捆绑了一些诸如测试、调试、文档生成等额外的工具来满足企业的开发过程。<br><a id="more"></a><br>此次更新主要进行了 bug 修复，内容如下：</p>
<ul>
<li>bug #27626 [TwigBundle][DX] Only add the Twig WebLinkExtension if the WebLink component is enabled (@thewilkybarkid)</li>
<li>bug #27702 [TwigBundle] bump lowest deps to fix issue with “double-colon” controller service refs (@nicolas-grekas)</li>
<li>bug #27701 [SecurityBundle] Dont throw if “security.http_utils” is not found (@nicolas-grekas)</li>
<li>bug #27690 [DI] Resolve env placeholder in logs (@ro0NL)</li>
<li>bug #27687 [HttpKernel] fix argument’s error messages in ServiceValueResolver (@nicolas-grekas)</li>
<li>bug #27614 [VarDumper] Fix dumping by splitting Server/Connection out of Dumper/ServerDumper (@nicolas-grekas)</li>
<li>bug #27681 [DI] Avoid leaking unused env placeholders (@ro0NL)</li>
<li>bug #26534 allow_extra_attributes does not throw an exception as documented (@deviantintegral)</li>
<li>bug #27664 [FrameworkBundle] Ignore keepQueryParams attribute when generating route redirect (@vudaltsov)</li>
<li>bug #27668 [Lock] use ‘r+’ for fopen (fixes issue on Solaris) (@fritzmg)</li>
<li>bug #27669 [Filesystem] fix file lock on SunOS (@fritzmg)</li>
<li>bug #27662 [HttpKernel] fix handling of nested Error instances (@xabbuh)</li>
<li>bug #27651 [Messenger] Fixed MessengerPass::guessHandledClasses return type (@massimilianobraglia)</li>
<li>bug #26845 [Config] Fixing GlobResource when inside phar archive (@vworldat)</li>
<li>bug #27382 [Form] Fix error when rendering a DateIntervalType form with exactly 0 weeks (@krixon)</li>
<li>bug #27309 Fix surrogate not using original request (@Toflar)</li>
<li>bug #27467 [HttpKernel] fix session tracking in surrogate master requests (@nicolas-grekas)</li>
<li>bug #27632 [HttpFoundation] Ensure RedisSessionHandler::updateTimestamp returns a boolean (@MatTheCat)</li>
<li>bug #27630 [Validator][Form] Remove BOM in some xlf files (@gautierderuette)</li>
<li>bug #27596 [Framework][Workflow] Added support for interfaces (@vudaltsov)</li>
<li>bug #27593 [ProxyManagerBridge] Fixed support of private services (@nicolas-grekas)</li>
<li>bug #27591 [VarDumper] Fix dumping ArrayObject and ArrayIterator instances (@nicolas-grekas)</li>
<li>bug #27528 [FrameworkBundle] give access to non-shared services when using test.service_container (@nicolas-grekas)</li>
<li>bug #27584 Avoid calling eval when there is no script embedded in the toolbar (@stof)</li>
<li>bug #27581 Fix bad method call with guard authentication + session migration (@weaverryan)</li>
<li>bug #27576 [Cache] Fix expiry comparisons in array-based pools (@nicolas-grekas)</li>
<li>bug #27566 [FrameworkBundle] fix for allowing single colon controller notation (@dmaicher)</li>
<li>bug #27556 Avoiding session migration for stateless firewall UsernamePasswordJsonAuthenticationListener (@weaverryan)</li>
<li>bug #27452 Avoid migration on stateless firewalls (@weaverryan)</li>
<li>bug #27568 [DI] Deduplicate generated proxy classes (@nicolas-grekas)</li>
<li>bug #27511 [Routing] fix matching host patterns, utf8 prefixes and non-capturing groups (@nicolas-grekas)</li>
<li>bug #27326 [Serializer] deserialize from xml: Fix a collection that contains the only one element (@webnet-fr)</li>
<li>bug #27562 [HttpKernel] Log/Collect exceptions at prio 0 (@ro0NL)</li>
<li>bug #27567 [PhpUnitBridge] Fix error on some Windows OS (@Nsbx)</li>
<li>bug #27357 [Lock] Remove released semaphore (@jderusse)</li>
<li>bug #27416 TagAwareAdapter over non-binary memcached connections corrupts memcache (@aleksey Prilipko)</li>
<li>bug #27514 [Debug] Pass previous exception to FatalErrorException (@pmontoya)</li>
<li>bug #27516 Revert “bug #26138 [HttpKernel] Catch HttpExceptions when templating is not installed (cilefen)” (@nicolas-grekas)</li>
<li>bug #27501 [FrameworkBundle] Fix test-container on kernel reboot, revert to returning the real container from Client::getContainer() (@nicolas-grekas)</li>
<li>bug #27472 [DI] Ignore missing tree root nodes on validate (@ro0NL)</li>
<li>bug #27458 [WebProfilerBundle] fixed getSession when no session has been set deprecation warnings (@GregOriol)</li>
<li>bug #27318 [Cache] memcache connect should not add duplicate entries on sequential calls (@aleksey Prilipko)</li>
<li>bug #27498 [Routing] Don’t reorder past variable-length placeholders (@nanocom, @nicolas-grekas)</li>
<li>bug #27496 [DebugBundle] DebugBundle::registerCommands should be noop (@ogizanagi)</li>
<li>bug #27485 [BrowserKit] Fix a BC break in Client affecting Panthère (@dunglas)</li>
<li>bug #27470 [DI] Remove default env type check on validate (@ro0NL)</li>
<li>bug #27454 [FrameworkBundle][TwigBridge] Fix BC break from strong dependency on CSRF token storage (@tgalopin)</li>
<li>bug #27389 [Serializer] Fix serializer tries to denormalize null values on nullable properties (@ogizanagi)</li>
<li>bug #27272 [FrameworkBundle] Change priority of AddConsoleCommandPass to TYPE_BEFORE_REMOVING (@upyx)</li>
<li>bug #27396 [HttpKernel] fix registering IDE links (@nicolas-grekas)</li>
<li>bug #26973 [HttpKernel] Set first trusted proxy as REMOTE_ADDR in InlineFragmentRenderer. (@kmadejski)</li>
<li>bug #27303 [Process] Consider “executable” suffixes first on Windows (@sanmai)</li>
<li>bug #27297 Triggering RememberMe’s loginFail() when token cannot be created (@weaverryan)</li>
</ul>
<p><a href="https://github.com/symfony/symfony/releases/tag/v4.1.1" target="_blank" rel="noopener">发布公告</a></p>
<p>下载地址：</p>
<ul>
<li><a href="https://github.com/symfony/symfony/archive/v4.1.1.zip" target="_blank" rel="noopener">Source code (zip)</a></li>
<li><a href="https://github.com/symfony/symfony/archive/v4.1.1.tar.gz" target="_blank" rel="noopener">Source code (tar.gz)</a></li>
</ul>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Symfony 4.1.1 发布了，Symfony 是一款基于 MVC 架构的 PHP 框架。Symfony 致力于减少重复代码的编写，以加速 Web 应用的开发和维护。Symfony 与许多关系型数据库集成的也非常好，成本也较小。此外，Symfony 致力于在企业背景下创建健壮的应用，同时也给予了开发者强大的配置功能：从文件结构到外部目录，几乎所有的东西都可以自定义。Symfony 也捆绑了一些诸如测试、调试、文档生成等额外的工具来满足企业的开发过程。&lt;br&gt;
    
    </summary>
    
      <category term="PHP" scheme="http://www.iooeo.com/categories/PHP/"/>
    
    
      <category term="PHP" scheme="http://www.iooeo.com/tags/PHP/"/>
    
      <category term="Symfony" scheme="http://www.iooeo.com/tags/Symfony/"/>
    
  </entry>
  
  <entry>
    <title>CakePHP 3.6.6 发布，bug 修复版本</title>
    <link href="http://www.iooeo.com/2018/06/26/CakePHP-3-6-6-%E5%8F%91%E5%B8%83%EF%BC%8Cbug-%E4%BF%AE%E5%A4%8D%E7%89%88%E6%9C%AC/"/>
    <id>http://www.iooeo.com/2018/06/26/CakePHP-3-6-6-发布，bug-修复版本/</id>
    <published>2018-06-26T01:44:47.000Z</published>
    <updated>2018-06-26T01:47:07.171Z</updated>
    
    <content type="html"><![CDATA[<p>CakePHP 3.6.6 发布了，这是 3.6 分支的维护版本，修复了几个社区报告的问题。CakePHP 是一个运用了诸如 ActiveRecord、Association Data Mapping、Front Controller 和 MVC 等著名设计模式的快速开发框架。该项目主要目标是提供一个可以让各种层次的 PHP 开发人员快速地开发出健壮的 Web 应用，而 又不失灵活性。<br><a id="more"></a><br>此次更新内容包括：</p>
<ul>
<li>IntegrationTestCase 现在 string 化所有请求数据，这更好地模拟了如何处理 HTTP POST 数据。</li>
<li>改进 API 文档。</li>
<li>使用 {var} 的路由正确地计算它们的静态路径段，使得路由解析能够正常工作。</li>
<li>在创建标识符时 Http\Client 不再小写化 cookie 名字。</li>
<li>Database\Query::fetchAll(‘obj’) 返回所有结果而不是只返回一行。</li>
<li>Table::saveMany() 现在在因为数据库死锁或其它操作错误而导致保存失败时恢复实体状态。</li>
<li>改进旧插件和新插件加载系统之间的兼容性。</li>
<li>BaseApplication::addPlugin() 现在创建一个动态插件类而不是抛出错误。</li>
<li>TranslateBehavior 现在继承父模型使用的表定位器。</li>
<li>EntityTrait::setDirty() 默认第二个参数为真</li>
<li>EntityTrait::setErrors() 不再在内部使用 array_merge()，解决了为多行字段添加错误时的问题。</li>
</ul>
<p>详情见<a href="https://github.com/cakephp/cakephp/releases/tag/3.6.6" target="_blank" rel="noopener">发布公告</a>。</p>
<p>下载地址：</p>
<ul>
<li><a href="https://github.com/cakephp/cakephp/archive/3.6.6.zip" target="_blank" rel="noopener">Source code (zip)</a></li>
<li><a href="https://github.com/cakephp/cakephp/archive/3.6.6.tar.gz" target="_blank" rel="noopener">Source code (tar.gz)</a></li>
</ul>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;CakePHP 3.6.6 发布了，这是 3.6 分支的维护版本，修复了几个社区报告的问题。CakePHP 是一个运用了诸如 ActiveRecord、Association Data Mapping、Front Controller 和 MVC 等著名设计模式的快速开发框架。该项目主要目标是提供一个可以让各种层次的 PHP 开发人员快速地开发出健壮的 Web 应用，而 又不失灵活性。&lt;br&gt;
    
    </summary>
    
      <category term="PHP" scheme="http://www.iooeo.com/categories/PHP/"/>
    
    
      <category term="PHP" scheme="http://www.iooeo.com/tags/PHP/"/>
    
      <category term="CakePHP" scheme="http://www.iooeo.com/tags/CakePHP/"/>
    
  </entry>
  
  <entry>
    <title>PHP 7.2.7 和 7.3.0 alpha 2 发布，包含大量修复</title>
    <link href="http://www.iooeo.com/2018/06/22/PHP-7-2-7-%E5%92%8C-7-3-0-alpha-2-%E5%8F%91%E5%B8%83%EF%BC%8C%E5%8C%85%E5%90%AB%E5%A4%A7%E9%87%8F%E4%BF%AE%E5%A4%8D/"/>
    <id>http://www.iooeo.com/2018/06/22/PHP-7-2-7-和-7-3-0-alpha-2-发布，包含大量修复/</id>
    <published>2018-06-22T01:23:12.000Z</published>
    <updated>2018-06-22T01:24:43.255Z</updated>
    
    <content type="html"><![CDATA[<p>PHP 7.2.7 已发布，这是一个 bug 修复版本，内容包括：<br><a id="more"></a><br>Core:</p>
<ul>
<li>Fixed bug #76337 (segfault when opcache enabled + extension use zend_register_class_alias).</li>
</ul>
<p>CLI Server:</p>
<ul>
<li>Fixed bug #76333 (PHP built-in server does not find files if root path contains special characters).</li>
</ul>
<p>OpenSSL:</p>
<ul>
<li>Fixed bug #76296 (openssl_pkey_get_public does not respect open_basedir).</li>
<li>Fixed bug #76174 (openssl extension fails to build with LibreSSL 2.7).</li>
</ul>
<p>SPL:</p>
<ul>
<li>Fixed bug #76367 (NoRewindIterator segfault 11).</li>
</ul>
<p>Standard:</p>
<ul>
<li>Fixed bug #76410 (SIGV in zend_mm_alloc_small).</li>
<li>Fixed bug #76335 (“link(): Bad file descriptor” with non-ASCII path).</li>
</ul>
<p>下载地址：<a href="http://www.php.net/downloads.php" target="_blank" rel="noopener">http://www.php.net/downloads.php</a></p>
<p>同时发布的还有 PHP 7.3.0alpha2，更新细节可查阅：</p>
<p><a href="https://github.com/php/php-src/blob/php-7.3.0alpha2/NEWS" target="_blank" rel="noopener">https://github.com/php/php-src/blob/php-7.3.0alpha2/NEWS</a></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;PHP 7.2.7 已发布，这是一个 bug 修复版本，内容包括：&lt;br&gt;
    
    </summary>
    
      <category term="PHP" scheme="http://www.iooeo.com/categories/PHP/"/>
    
    
      <category term="PHP" scheme="http://www.iooeo.com/tags/PHP/"/>
    
  </entry>
  
  <entry>
    <title>ThinkPHP 5.1.17 版本发布 —— 增加控制器中间件</title>
    <link href="http://www.iooeo.com/2018/06/19/ThinkPHP-5-1-17-%E7%89%88%E6%9C%AC%E5%8F%91%E5%B8%83-%E2%80%94%E2%80%94-%E5%A2%9E%E5%8A%A0%E6%8E%A7%E5%88%B6%E5%99%A8%E4%B8%AD%E9%97%B4%E4%BB%B6/"/>
    <id>http://www.iooeo.com/2018/06/19/ThinkPHP-5-1-17-版本发布-——-增加控制器中间件/</id>
    <published>2018-06-19T03:49:40.000Z</published>
    <updated>2018-06-19T05:34:03.377Z</updated>
    
    <content type="html"><![CDATA[<p>该版本主要增加了控制器中间件的支持，改进了路由功能，并且修正了社区反馈的一些问题。支持上一个版本无缝更新~<br><a id="more"></a></p>
<h2 id="更新日志"><a href="#更新日志" class="headerlink" title="更新日志"></a>更新日志</h2><ul>
<li>修正软删除的<code>delete</code>方法</li>
<li>修正Query类<code>Count</code>方法</li>
<li>改进多对多<code>detach</code>方法</li>
<li>改进Request类<code>Session</code>方法</li>
<li>增加控制器中间件支持</li>
<li>模型类增加<code>jsonAssoc</code>属性用于定义json数据是否返回数组</li>
<li>修正Request类<code>method</code>方法请求伪装</li>
<li>改进静态路由的匹配</li>
<li>分组首页路由自动完整匹配</li>
<li>改进sqlsrv的<code>column</code>方法</li>
<li>日志类的<code>apart_level</code>配置支持true自动生成对应类型的日志文件</li>
<li>改进<code>204</code>输出判断</li>
<li>修正cli下页面输出的BUG</li>
<li>验证类使用更高效的<code>ctype</code>验证机制</li>
<li>改进Request类<code>cookie</code>方法</li>
<li>修正软删除的<code>withTrashed</code>方法</li>
<li>改进多态一对多的预载入查询</li>
<li>改进Query类<code>column</code>方法的缓存读取</li>
<li>Query类增加<code>whereBetweenTimeField</code>方法</li>
<li>改进分组下多个相同路由规则的合并匹配问题</li>
<li>路由类增加<code>getRule</code>/<code>getRuleList</code>方法获取定义的路由</li>
</ul>
<p>官方<a href="https://www.kancloud.cn/manual/thinkphp5_1/content" target="_blank" rel="noopener">完全开发手册</a>已经同步更新!</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;该版本主要增加了控制器中间件的支持，改进了路由功能，并且修正了社区反馈的一些问题。支持上一个版本无缝更新~&lt;br&gt;
    
    </summary>
    
      <category term="PHP" scheme="http://www.iooeo.com/categories/PHP/"/>
    
      <category term="ThinkPHP" scheme="http://www.iooeo.com/categories/PHP/ThinkPHP/"/>
    
    
      <category term="PHP" scheme="http://www.iooeo.com/tags/PHP/"/>
    
      <category term="ThinkPHP" scheme="http://www.iooeo.com/tags/ThinkPHP/"/>
    
  </entry>
  
  <entry>
    <title>HHVM 3.27.0 LTS 发布，改进性能和对 IDE 的支持</title>
    <link href="http://www.iooeo.com/2018/06/19/HHVM-3-27-0-LTS-%E5%8F%91%E5%B8%83%EF%BC%8C%E6%94%B9%E8%BF%9B%E6%80%A7%E8%83%BD%E5%92%8C%E5%AF%B9-IDE-%E7%9A%84%E6%94%AF%E6%8C%81/"/>
    <id>http://www.iooeo.com/2018/06/19/HHVM-3-27-0-LTS-发布，改进性能和对-IDE-的支持/</id>
    <published>2018-06-19T02:13:56.000Z</published>
    <updated>2018-06-19T02:15:48.047Z</updated>
    
    <content type="html"><![CDATA[<p>HHVM 是 Facebook 推出的用来执行 PHP 代码的虚拟机，它是一个 PHP 的 JIT(Just-In-Time) 编译器，同时具有产生快速代码和即时编译的优点。<br><a id="more"></a><br>HHVM 3.27.0 已发布，这是最新的  LTS 版本，并包含性能、IDE、类型检查器和一些其他改进：</p>
<ul>
<li>HackC 现在是唯一受支持的前端；遗留的分析器仍然包含在内，但已不受支持，预计将在 3.28 中被彻底删除；</li>
<li>移除对 XDebug 的支持；</li>
<li>删除 ODBC 扩展；</li>
<li>向 .hhconfig 添加 forward_compatibility_level 选项以使管理升级变得更容易；</li>
<li>改进 HackC 中的 PHP 支持；</li>
<li>当在 .hhconfig 中设置 disallow_unsafe_comparisons = true 时，不允许在 Hack 代码中的不兼容类型之间进行比较；</li>
<li>当在 .hhconfig 中设置 disallow_non_arraykey_keys = true 时，强制在 Hack 代码中使用容器密钥。</li>
</ul>
<p>完整更新内容请查阅发行说明：</p>
<ul>
<li><a href="https://hhvm.com/blog/2018/06/18/hhvm-3.27.0.html" target="_blank" rel="noopener">https://hhvm.com/blog/2018/06/18/hhvm-3.27.0.html</a></li>
</ul>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;HHVM 是 Facebook 推出的用来执行 PHP 代码的虚拟机，它是一个 PHP 的 JIT(Just-In-Time) 编译器，同时具有产生快速代码和即时编译的优点。&lt;br&gt;
    
    </summary>
    
      <category term="PHP" scheme="http://www.iooeo.com/categories/PHP/"/>
    
    
      <category term="PHP" scheme="http://www.iooeo.com/tags/PHP/"/>
    
      <category term="HHVM" scheme="http://www.iooeo.com/tags/HHVM/"/>
    
  </entry>
  
  <entry>
    <title>Swoole 4.0 正式版发布，面向生产环境的 PHP 协程引擎</title>
    <link href="http://www.iooeo.com/2018/06/15/Swoole-4-0-%E6%AD%A3%E5%BC%8F%E7%89%88%E5%8F%91%E5%B8%83%EF%BC%8C%E9%9D%A2%E5%90%91%E7%94%9F%E4%BA%A7%E7%8E%AF%E5%A2%83%E7%9A%84-PHP-%E5%8D%8F%E7%A8%8B%E5%BC%95%E6%93%8E/"/>
    <id>http://www.iooeo.com/2018/06/15/Swoole-4-0-正式版发布，面向生产环境的-PHP-协程引擎/</id>
    <published>2018-06-15T01:22:10.000Z</published>
    <updated>2018-06-15T01:29:05.931Z</updated>
    
    <content type="html"><![CDATA[<p>Swoole虽然在2016年就支持了协程特性，但由于底层是基于setjmp/longjmp实现的stackless方案。因此在某些场景下，如call_user_func、array_map、__destruct中无法使用协程。大型应用程序中逻辑非常复杂，多人协作的团队中，开发者很容易踩到坑。在禁止场景中使用协程API会出现各种莫名其妙的问题发生。限制了协程的应用范围。<br><a id="more"></a></p>
<p>新版本4.0基于boost.context 1.60汇编代码实现了全新的协程内核。在保存PHP函数调用栈的基础上，增加了C栈的上下文存储。实现了对所有PHP语法的支持。现在在任意PHP的函数，包括call_user_func、反射、魔术方法、array_map中均可使用协程。<br><strong>现在可以在PHP代码中任意位置使用协程</strong>，开发者不再需要担心使用场景问题。4.0版本我们与SwooleDistributed/Swoft/EasySwoole等框架作者进行了紧密合作，在大量项目中进行了灰度试用。稳定性和健壮性均已达到工业级的水准。完全可用于大型项目的生产环境中。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">go(function() &#123;</div><div class="line">    array_map(&quot;test&quot;, array(&quot;func start\n&quot;));</div><div class="line">    echo &quot;co end\n&quot;;</div><div class="line">&#125;);  </div><div class="line">function test($p) &#123;</div><div class="line">    echo $p;</div><div class="line">    co::sleep(1);</div><div class="line">    echo &quot;func end \n&quot;;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p><strong>4.0分支使用了C++11标准，建议使用gcc-4.8或更高版本。</strong></p>
<h3 id="全局变量隔离"><a href="#全局变量隔离" class="headerlink" title="全局变量隔离"></a>全局变量隔离</h3><p>新版本中底层对全局变量进行了隔离，现在可以使用Swoole\Process创建多个Swoole\Server实例了。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div></pre></td><td class="code"><pre><div class="line">for ($i = 0; $i &lt; 2; $i++)</div><div class="line">&#123;</div><div class="line">    $p = new swoole_process(function () use ($i) &#123;</div><div class="line">        $port = 9501 + $i;</div><div class="line">        $http = new swoole_http_server(&quot;127.0.0.1&quot;, $port);</div><div class="line">        $http-&gt;on(&quot;start&quot;, function ($server) use ($port) &#123;</div><div class="line">            echo &quot;Swoole http server is started at http://127.0.0.1:&#123;$port&#125;\n&quot;;</div><div class="line">        &#125;);</div><div class="line">        $http-&gt;on(&quot;request&quot;, function ($request, $response) &#123;</div><div class="line">            $response-&gt;header(&quot;Content-Type&quot;, &quot;text/plain&quot;);</div><div class="line">            $response-&gt;end(&quot;Hello World\n&quot;);</div><div class="line">        &#125;);</div><div class="line">        $http-&gt;start();</div><div class="line">    &#125;, false, false);</div><div class="line">    $p-&gt;start();</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<h3 id="其他更新"><a href="#其他更新" class="headerlink" title="其他更新"></a>其他更新</h3><ul>
<li>修复http2服务器无法向Chrome浏览器客户端发送超过16K数据的问题</li>
<li>修复BASE模式下Task进程无法重启的问题</li>
<li>增加Channel-&gt;peek方法，用于窥视数据</li>
<li>修复Server-&gt;pause/resume在SWOOLE_PROCESS下无法使用的问题</li>
<li>移除Linux AIO，现在无论如何设置都使用线程池实现异步文件IO</li>
<li>支持MySQL存储过程</li>
</ul>
<h3 id="下载-4-0"><a href="#下载-4-0" class="headerlink" title="下载 4.0"></a>下载 4.0</h3><ul>
<li>GITHUB：<a href="https://github.com/swoole/swoole-src/releases/tag/v4.0.0" target="_blank" rel="noopener">https://github.com/swoole/swoole-src/releases/tag/v4.0.0</a></li>
<li>开源中国：<a href="https://gitee.com/swoole/swoole/tree/v4.0.0/" target="_blank" rel="noopener">https://gitee.com/swoole/swoole/tree/v4.0.0/</a></li>
<li>PECL：<a href="https://pecl.php.net/package/swoole/4.0.0" target="_blank" rel="noopener">https://pecl.php.net/package/swoole/4.0.0</a></li>
</ul>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Swoole虽然在2016年就支持了协程特性，但由于底层是基于setjmp/longjmp实现的stackless方案。因此在某些场景下，如call_user_func、array_map、__destruct中无法使用协程。大型应用程序中逻辑非常复杂，多人协作的团队中，开发者很容易踩到坑。在禁止场景中使用协程API会出现各种莫名其妙的问题发生。限制了协程的应用范围。&lt;br&gt;
    
    </summary>
    
      <category term="PHP" scheme="http://www.iooeo.com/categories/PHP/"/>
    
      <category term="Swoole" scheme="http://www.iooeo.com/categories/PHP/Swoole/"/>
    
    
      <category term="PHP" scheme="http://www.iooeo.com/tags/PHP/"/>
    
      <category term="Swoole" scheme="http://www.iooeo.com/tags/Swoole/"/>
    
  </entry>
  
  <entry>
    <title>yii2 3.0.0-alpha1 发布，高性能 PHP 框架</title>
    <link href="http://www.iooeo.com/2018/06/12/yii2-3-0-0-alpha1-%E5%8F%91%E5%B8%83%EF%BC%8C%E9%AB%98%E6%80%A7%E8%83%BD-PHP-%E6%A1%86%E6%9E%B6/"/>
    <id>http://www.iooeo.com/2018/06/12/yii2-3-0-0-alpha1-发布，高性能-PHP-框架/</id>
    <published>2018-06-12T01:15:01.000Z</published>
    <updated>2018-06-12T01:20:12.555Z</updated>
    
    <content type="html"><![CDATA[<p>yii2 3.0.0-alpha1 发布了。Yii 2 完全根据 Yii 1.1 版本重写，后者是最流行的 PHP 框架之一。Yii 2 继承了 Yii 的简洁、快速、和高扩展性。Yii 2 需要 PHP 5.4，并且拥有现代 Web 应用开发中最好的实例和协议。<br><a id="more"></a><br>更新内容：</p>
<ul>
<li>Bug #16065: Remove using date.timezone at yii\base\Application, use date_default_timezone_get() instead (sashsvamir)</li>
<li>Bug #12539: yii\filters\ContentNegotiator now generates 406 ‘Not Acceptable’ instead of 415 ‘Unsupported Media Type’ on content-type negotiation fail (PowerGamer1)</li>
<li>Bug #14458: Fixed yii\filters\VerbFilter uses case-insensitive comparison for the HTTP method name (klimov-paul)</li>
<li>Enh #879: Caching implementation refactored according to PSR-16 ‘Simple Cache’ specification (klimov-paul)</li>
<li>Enh #11328: Added support for PSR-7 ‘HTTP Message’ (klimov-paul)</li>
</ul>
<p>完整更新内容请查看 <a href="https://github.com/yiisoft/yii2/blob/3.0.0-alpha1/framework/CHANGELOG.md" target="_blank" rel="noopener">ChangeLog</a>。</p>
<p>下载地址：</p>
<ul>
<li><a href="https://github.com/yiisoft/yii2/archive/3.0.0-alpha1.zip" target="_blank" rel="noopener">Source code (zip)</a></li>
<li><a href="https://github.com/yiisoft/yii2/archive/3.0.0-alpha1.tar.gz" target="_blank" rel="noopener">Source code (tar.gz)</a></li>
</ul>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;yii2 3.0.0-alpha1 发布了。Yii 2 完全根据 Yii 1.1 版本重写，后者是最流行的 PHP 框架之一。Yii 2 继承了 Yii 的简洁、快速、和高扩展性。Yii 2 需要 PHP 5.4，并且拥有现代 Web 应用开发中最好的实例和协议。&lt;br&gt;
    
    </summary>
    
      <category term="PHP" scheme="http://www.iooeo.com/categories/PHP/"/>
    
      <category term="Yii2" scheme="http://www.iooeo.com/categories/PHP/Yii2/"/>
    
    
      <category term="PHP" scheme="http://www.iooeo.com/tags/PHP/"/>
    
      <category term="Yii2" scheme="http://www.iooeo.com/tags/Yii2/"/>
    
  </entry>
  
  <entry>
    <title>CakePHP 3.6.5 发布，Bug 修复</title>
    <link href="http://www.iooeo.com/2018/06/11/CakePHP-3-6-5-%E5%8F%91%E5%B8%83%EF%BC%8CBug-%E4%BF%AE%E5%A4%8D/"/>
    <id>http://www.iooeo.com/2018/06/11/CakePHP-3-6-5-发布，Bug-修复/</id>
    <published>2018-06-11T01:14:46.000Z</published>
    <updated>2018-06-11T01:17:41.068Z</updated>
    
    <content type="html"><![CDATA[<p>PHP 开发框架 CakePHP 3.6.5 发布，这是 3.6 版本分支的维护版本，修复了几个社区报告的问题。<br><a id="more"></a><br>更新内容：</p>
<ul>
<li>Improved deprecation warning text.</li>
<li>Plugin::load() now uses concrete plugin classes if a plugin has adopted new style plugins.</li>
<li>The mimetype for .bmp was added to Response.</li>
<li>Plugin::routes() had a deprecation warning added. This method is no longer  necessary when using an Application class.</li>
<li>Missing deprecation warnings were added to Response.</li>
<li>IntegrationTestCase once again accepts array URLs when generating requests.</li>
<li>Email messages no correctly word-wrap multi-byte characters.</li>
<li>Http\Client restores the error handler after a socket error.</li>
<li>AppShell is now included in the list of auto-discovered shells.</li>
<li>ConsoleIntegrationTestCase now catches StopException and sets the test  case exitCode property accordingly.</li>
<li>Cell::__debugInfo() no longer emits a notice error.</li>
<li>Pagination metadata now includes the start &amp; end record numbers.</li>
<li>The Model.afterSaveCommit event always recieves an ArrayObject for $options now.</li>
</ul>
<p>下载地址：</p>
<ul>
<li><a href="https://github.com/cakephp/cakephp/releases/download/3.6.5/cakephp-3-6-5.zip" target="_blank" rel="noopener">cakephp-3-6-5.zip</a></li>
<li><a href="https://github.com/cakephp/cakephp/archive/3.6.5.zip" target="_blank" rel="noopener">Source code (zip)</a></li>
<li><a href="https://github.com/cakephp/cakephp/archive/3.6.5.tar.gz" target="_blank" rel="noopener">Source code (tar.gz)</a></li>
</ul>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;PHP 开发框架 CakePHP 3.6.5 发布，这是 3.6 版本分支的维护版本，修复了几个社区报告的问题。&lt;br&gt;
    
    </summary>
    
      <category term="PHP" scheme="http://www.iooeo.com/categories/PHP/"/>
    
    
      <category term="PHP" scheme="http://www.iooeo.com/tags/PHP/"/>
    
      <category term="CakePHP" scheme="http://www.iooeo.com/tags/CakePHP/"/>
    
  </entry>
  
  <entry>
    <title>PHP 7.3.0 alpha 1 发布，包含大量修复和改进</title>
    <link href="http://www.iooeo.com/2018/06/08/PHP-7-3-0-alpha-1-%E5%8F%91%E5%B8%83%EF%BC%8C%E5%8C%85%E5%90%AB%E5%A4%A7%E9%87%8F%E4%BF%AE%E5%A4%8D%E5%92%8C%E6%94%B9%E8%BF%9B/"/>
    <id>http://www.iooeo.com/2018/06/08/PHP-7-3-0-alpha-1-发布，包含大量修复和改进/</id>
    <published>2018-06-08T05:02:59.000Z</published>
    <updated>2018-06-08T05:09:29.556Z</updated>
    
    <content type="html"><![CDATA[<p>PHP 7.3.0 alpha 1 已发布，更新内容如下：<br><a id="more"></a></p>
<h3 id="Core"><a href="#Core" class="headerlink" title="Core:"></a>Core:</h3><ul>
<li>Improved PHP GC. (Dmitry, Nikita)</li>
<li>Redesigned the old ext_skel program written in PHP, run:<br>  ‘php ext_skel.php’ for all options. This means there are no dependencies,<br>  thus making it work on Windows out of the box. (Kalle)</li>
<li>Removed support for BeOS. (Kalle)</li>
<li>Add PHP_VERSION to phpinfo() <title>. (github/MattJeevas)</title></li>
<li>Add net_get_interfaces(). (Sara, Joe, Anatol)</li>
<li>Implemented flexible heredoc and nowdoc syntax, per<br>  RFC <a href="https://wiki.php.net/rfc/flexible_heredoc_nowdoc_syntaxes" target="_blank" rel="noopener">https://wiki.php.net/rfc/flexible_heredoc_nowdoc_syntaxes</a>.<br>  (Thomas Punt)</li>
<li>Added support for references in list() and array destructuring, per<br>  RFC <a href="https://wiki.php.net/rfc/list_reference_assignment" target="_blank" rel="noopener">https://wiki.php.net/rfc/list_reference_assignment</a>.<br>  (David Walker)</li>
<li>Fixed bug #75683 (Memory leak in zend_register_functions() in ZTS mode).<br>  (Dmitry)</li>
<li>Fixed bug #75031 (support append mode in temp/memory streams). (adsr)</li>
<li>Fixed bug #74860 (Uncaught exceptions not being formatted properly when<br>  error_log set to “syslog”). (Philip Prindeville)</li>
<li>Fixed bug #75220 (Segfault when calling is_callable on parent).<br>  (andrewnester)</li>
<li>Fixed bug #69954 (broken links and unused config items in distributed ini<br>  files). (petk)</li>
<li>Fixed bug #74922 (Composed class has fatal error with duplicate, equal const<br>  properties). (pmmaga)</li>
<li>Fixed bug #63911 (identical trait methods raise errors during composition).<br>  (pmmaga)</li>
<li>Fixed bug #75677 (Clang ignores fastcall calling convention on variadic<br>  function). (Li-Wen Hsu)</li>
<li>Fixed bug #54043 (Remove inconsitency of internal exceptions and user<br>  defined exceptions). (Nikita)</li>
<li>Fixed bug #53033 (Mathematical operations convert objects to integers).<br>  (Nikita)</li>
<li>Fixed bug #73108 (Internal class cast handler uses integer instead of<br>  float). (Nikita)</li>
<li>Fixed bug #75765 (Fatal error instead of Error exception when base class is<br>  not found). (Timur Ibragimov)</li>
<li>Fixed bug #76198 (Wording: “iterable” is not a scalar type). (Levi Morrison)</li>
<li>Fixed bug #76137 (config.guess/config.sub do not recognize RISC-V). (cmb)</li>
</ul>
<h3 id="BCMath"><a href="#BCMath" class="headerlink" title="BCMath:"></a>BCMath:</h3><ul>
<li>Fixed bug #66364 (BCMath bcmul ignores scale parameter). (cmb)</li>
<li>Implemented request #67855 (No way to get current scale in use). (Chris<br>  Wright, cmb)</li>
<li>Fixed bug #75164 (split_bc_num() is pointless). (cmb)</li>
<li>Fixed bug #75169 (BCMath errors/warnings bypass PHP’s error handling). (cmb)</li>
</ul>
<h3 id="cURL"><a href="#cURL" class="headerlink" title="cURL:"></a>cURL:</h3><ul>
<li>Fixed bug #74125 (Fixed finding CURL on systems with multiarch support).<br>  (cebe)</li>
</ul>
<h3 id="Date"><a href="#Date" class="headerlink" title="Date:"></a>Date:</h3><ul>
<li>Implemented FR #74668: Add DateTime::createFromImmutable() method.<br>  (majkl578, Rican7)</li>
<li>Fixed bug #75222 (DateInterval microseconds property always 0). (jhdxr)</li>
<li>Fixed bug #68406 (calling var_dump on a DateTimeZone object modifies it).<br>  (jhdxr)</li>
<li>Fixed bug #76131 (mismatch arginfo for date_create). (carusogabriel)</li>
</ul>
<h3 id="DBA"><a href="#DBA" class="headerlink" title="DBA:"></a>DBA:</h3><ul>
<li>Fixed bug #75264 (compiler warnings emitted). (petk)</li>
</ul>
<h3 id="GD"><a href="#GD" class="headerlink" title="GD:"></a>GD:</h3><ul>
<li>Added support for WebP in imagecreatefromstring() (Andreas Treichel, cmb).</li>
</ul>
<h3 id="GMP"><a href="#GMP" class="headerlink" title="GMP:"></a>GMP:</h3><ul>
<li>Export internal structures and accessor helpers for GMP object. (Sara)</li>
<li>Added gmp_binomial(n, k). (Nikita)</li>
<li>Added gmp_lcm(a, b). (Nikita)</li>
<li>Added gmp_perfect_power(a). (Nikita)</li>
<li>Added gmp_kronecker(a, b). (Nikita)</li>
</ul>
<h3 id="interbase"><a href="#interbase" class="headerlink" title="interbase:"></a>interbase:</h3><ul>
<li>Fixed bug #75453 (Incorrect reflection for ibase_[p]connect). (villfa)</li>
</ul>
<h3 id="intl"><a href="#intl" class="headerlink" title="intl:"></a>intl:</h3><ul>
<li>Fixed bug #75317 (UConverter::setDestinationEncoding changes source instead<br>  of destination). (andrewnester)</li>
</ul>
<h3 id="JSON"><a href="#JSON" class="headerlink" title="JSON:"></a>JSON:</h3><ul>
<li>Added JSON_THROW_ON_ERROR flag. (Andrea)</li>
</ul>
<h3 id="LDAP"><a href="#LDAP" class="headerlink" title="LDAP:"></a>LDAP:</h3><ul>
<li>Added ldap_exop_refresh helper for EXOP REFRESH operation with dds overlay.<br>  (Come)</li>
<li>Added full support for sending and parsing ldap controls (Come)</li>
<li>Fixed bug #49876 (Fix LDAP path lookup on 64-bit distros). (dzuelke)</li>
</ul>
<h3 id="libxml2"><a href="#libxml2" class="headerlink" title="libxml2:"></a>libxml2:</h3><ul>
<li>Fixed bug #75871 (use pkg-config where available). (pmmaga)</li>
</ul>
<h3 id="litespeed"><a href="#litespeed" class="headerlink" title="litespeed:"></a>litespeed:</h3><ul>
<li>Fixed bug #75248 (Binary directory doesn’t get created when building<br>  only litespeed SAPI). (petk)</li>
<li>Fixed bug #75251 (Missing program prefix and suffix). (petk)</li>
</ul>
<h3 id="mbstring"><a href="#mbstring" class="headerlink" title="mbstring:"></a>mbstring:</h3><ul>
<li>Fixed bug #65544 (mb title case conversion-first word in quotation isn’t<br>  capitalized). (Nikita)</li>
<li>Fixed bug #71298 (MB_CASE_TITLE misbehaves with curled apostrophe/quote.<br>  (Nikita)</li>
<li>Fixed bug #73528 (Crash in zif_mb_send_mail). (Nikita)</li>
<li>Fixed bug #74929 (mbstring functions version 7.1.1 are slow compared to 5.3<br>  on Windows). (Nikita)</li>
<li>Fixed bug #76319 (mb_strtolower with invalid UTF-8 causes segmentation<br>  fault). (Nikita)</li>
<li>Updated to Oniguruma 6.8.2. (cmb)</li>
</ul>
<h3 id="ODBC"><a href="#ODBC" class="headerlink" title="ODBC:"></a>ODBC:</h3><ul>
<li>Removed support for ODBCRouter. (Kalle)</li>
<li>Removed support for Birdstep. (Kalle)</li>
</ul>
<h3 id="OpenSSL"><a href="#OpenSSL" class="headerlink" title="OpenSSL:"></a>OpenSSL:</h3><ul>
<li>Added openssl_pkey_derive function. (Jim Zubov)</li>
</ul>
<h3 id="PCRE"><a href="#PCRE" class="headerlink" title="PCRE:"></a>PCRE:</h3><ul>
<li>Implemented <a href="https://wiki.php.net/rfc/pcre2-migration" target="_blank" rel="noopener">https://wiki.php.net/rfc/pcre2-migration</a> (Anatol, Dmitry)</li>
<li>Fixed bug #75355 (preg_quote() does not quote # control character).<br>  (Michael Moravec)</li>
</ul>
<h3 id="PDO-DBlib"><a href="#PDO-DBlib" class="headerlink" title="PDO_DBlib:"></a>PDO_DBlib:</h3><ul>
<li>Implemented request #69592 (allow 0-column rowsets to be skipped<br>  automatically). (fandrieu)</li>
<li>Fixed bug #74243 (allow locales.conf to drive datetime format). (fandrieu)</li>
<li>Expose TDS version as \PDO::DBLIB_ATTR_TDS_VERSION attribute on \PDO<br>  instance. (fandrieu)</li>
<li>Treat DATETIME2 columns like DATETIME. (fandrieu)</li>
</ul>
<h3 id="PDO-OCI"><a href="#PDO-OCI" class="headerlink" title="PDO_OCI:"></a>PDO_OCI:</h3><ul>
<li>Fixed bug #74631 (PDO_PCO with PHP-FPM: OCI environment initialized<br>  before PHP-FPM sets it up). (Ingmar Runge)</li>
</ul>
<h3 id="PDO-SQLite"><a href="#PDO-SQLite" class="headerlink" title="PDO SQLite"></a>PDO SQLite</h3><ul>
<li>Add support for additional open flags</li>
</ul>
<h3 id="pgsql"><a href="#pgsql" class="headerlink" title="pgsql:"></a>pgsql:</h3><ul>
<li>Added new error constants for pg_result_error(): (Kalle)<ul>
<li>Requires Postgres 9.3<ul>
<li>PGSQL_DIAG_SCHEMA_NAME</li>
<li>PGSQL_DIAG_TABLE_NAME</li>
<li>PGSQL_DIAG_COLUMN_NAME</li>
<li>PGSQL_DIAG_DATATYPE_NAME</li>
<li>PGSQL_DIAG_CONSTRAINT_NAME</li>
</ul>
</li>
<li>Requires Postgres 9.6<ul>
<li>PGSQL_DIAG_SEVERITY_NONLOCALIZED</li>
</ul>
</li>
</ul>
</li>
</ul>
<h3 id="phar"><a href="#phar" class="headerlink" title="phar:"></a>phar:</h3><ul>
<li>Fixed bug #74991 (include_path has a 4096 char limit in some cases).<br>  (bwbroersma)</li>
<li>Fixed bug #65414 (deal with leading slash when adding files correctly).<br>  (bishopb)</li>
</ul>
<h3 id="readline"><a href="#readline" class="headerlink" title="readline:"></a>readline:</h3><ul>
<li>Added completion_append_character and completion_suppress_append options<br>  to readline_info() if linked against libreadline. (krageon)</li>
</ul>
<h3 id="Session"><a href="#Session" class="headerlink" title="Session:"></a>Session:</h3><ul>
<li>Fixed bug #74941 (session fails to start after having headers sent).<br>  (morozov)</li>
</ul>
<h3 id="SimpleXML"><a href="#SimpleXML" class="headerlink" title="SimpleXML:"></a>SimpleXML:</h3><ul>
<li>Fixed bug #54973 (SimpleXML casts integers wrong). (Nikita)</li>
</ul>
<h3 id="SOAP"><a href="#SOAP" class="headerlink" title="SOAP:"></a>SOAP:</h3><ul>
<li>Fixed bug #75464 (Wrong reflection on SoapClient::__setSoapHeaders). (villfa)</li>
<li>Fixed bug #70469 (SoapClient generates E_ERROR even if exceptions=1 is<br>  used). (Anton Artamonov)</li>
</ul>
<h3 id="SPL"><a href="#SPL" class="headerlink" title="SPL:"></a>SPL:</h3><ul>
<li>Fixed bug #74977 (Appending AppendIterator leads to segfault).<br>  (Andrew Nester)</li>
<li>Fixed bug #75173 (incorrect behavior of AppendIterator::append in foreach<br>  loop). (jhdxr)</li>
<li>Fixed bug #74372 (autoloading file with syntax error uses next autoloader,<br>  may hide parse error). (Nikita)</li>
<li>Fixed bug #75878 (RecursiveTreeIterator::setPostfix has wrong signature).<br>  (cmb)</li>
<li>Fixed bug #74519 (strange behavior of AppendIterator). (jhdxr)</li>
<li>Fixed bug #76131 (mismatch arginfo for splarray constructor).<br>  (carusogabriel)</li>
</ul>
<h3 id="SQLite3"><a href="#SQLite3" class="headerlink" title="SQLite3:"></a>SQLite3:</h3><ul>
<li>Updated bundled libsqlite to 3.24.0. (cmb)</li>
</ul>
<h3 id="Standard"><a href="#Standard" class="headerlink" title="Standard:"></a>Standard:</h3><ul>
<li>Added is_countable() function. (Gabriel Caruso)</li>
<li>Fixed bug #75916 (DNS_CAA record results contain garbage). (Mike,<br>  Philip Sharp)</li>
<li>Fixed unserialize(), to disable creation of unsupported data structures<br>  through manually crafted strings. (Dmitry)</li>
<li>Fixed bug #75409 (accept EFAULT in addition to ENOSYS as indicator<br>  that getrandom() is missing). (sarciszewski)</li>
<li>Fixed bug #74719 (fopen() should accept NULL as context). (Alexander Holman)</li>
<li>Fixed bug #69948 (path/domain are not sanitized in setcookie). (cmb)</li>
<li>Fixed bug #75996 (incorrect url in header for mt_rand). (tatarbj)</li>
<li>Remove superfluous warnings from inet_ntop()/inet_pton(). (daverandom)</li>
</ul>
<h3 id="Testing"><a href="#Testing" class="headerlink" title="Testing:"></a>Testing:</h3><ul>
<li>Implemented request #62055 (Make run-tests.php support –CGI-### sections).<br>  (cmb)</li>
</ul>
<h3 id="Tidy"><a href="#Tidy" class="headerlink" title="Tidy:"></a>Tidy:</h3><ul>
<li>Fixed bug #74707 (Tidy has incorrect ReflectionFunction param counts for<br>  functions taking tidy). (Gabriel Caruso)</li>
</ul>
<h3 id="Zlib"><a href="#Zlib" class="headerlink" title="Zlib:"></a>Zlib:</h3><ul>
<li>Added zlib/level context option for compress.zlib wrapper. (Sara)</li>
</ul>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;PHP 7.3.0 alpha 1 已发布，更新内容如下：&lt;br&gt;
    
    </summary>
    
      <category term="PHP" scheme="http://www.iooeo.com/categories/PHP/"/>
    
    
      <category term="PHP" scheme="http://www.iooeo.com/tags/PHP/"/>
    
  </entry>
  
  <entry>
    <title>Symfony 4.1.0 发布，PHP 框架与可重用 PHP 组件集</title>
    <link href="http://www.iooeo.com/2018/05/31/Symfony-4-1-0-%E5%8F%91%E5%B8%83%EF%BC%8CPHP-%E6%A1%86%E6%9E%B6%E4%B8%8E%E5%8F%AF%E9%87%8D%E7%94%A8-PHP-%E7%BB%84%E4%BB%B6%E9%9B%86/"/>
    <id>http://www.iooeo.com/2018/05/31/Symfony-4-1-0-发布，PHP-框架与可重用-PHP-组件集/</id>
    <published>2018-05-31T01:23:30.000Z</published>
    <updated>2018-05-31T01:25:10.587Z</updated>
    
    <content type="html"><![CDATA[<p>Symfony 4.1.0 发布了，此次更新修复了两个 bug：</p>
<ul>
<li>bug #27420 还原“feature #26702 标记 ExceptionInterfaces 可抛出 (ostrolucky)” (@nicolas-grekas)</li>
<li>bug #27415 在 AbstractController 中插入正确的 parameter_bag 服务 (@curry684)</li>
</ul>
<p>详情见<a href="https://github.com/symfony/symfony/releases/tag/v4.1.0" target="_blank" rel="noopener">发布公告</a>。</p>
<p>下载地址：</p>
<ul>
<li><a href="https://github.com/symfony/symfony/archive/v4.1.0.zip" target="_blank" rel="noopener">Source code (zip)</a></li>
<li><a href="https://github.com/symfony/symfony/archive/v4.1.0.tar.gz" target="_blank" rel="noopener">Source code (tar.gz)</a></li>
</ul>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Symfony 4.1.0 发布了，此次更新修复了两个 bug：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;bug #27420 还原“feature #26702 标记 ExceptionInterfaces 可抛出 (ostrolucky)” (@nicolas-grekas)&lt;/li
    
    </summary>
    
      <category term="PHP" scheme="http://www.iooeo.com/categories/PHP/"/>
    
    
      <category term="PHP" scheme="http://www.iooeo.com/tags/PHP/"/>
    
      <category term="Symfony" scheme="http://www.iooeo.com/tags/Symfony/"/>
    
  </entry>
  
  <entry>
    <title>Phalcon 3.4.0 发布，PHP 的 C 扩展 Web 框架</title>
    <link href="http://www.iooeo.com/2018/05/30/Phalcon-3-4-0-%E5%8F%91%E5%B8%83%EF%BC%8CPHP-%E7%9A%84-C-%E6%89%A9%E5%B1%95-Web-%E6%A1%86%E6%9E%B6/"/>
    <id>http://www.iooeo.com/2018/05/30/Phalcon-3-4-0-发布，PHP-的-C-扩展-Web-框架/</id>
    <published>2018-05-30T01:11:02.000Z</published>
    <updated>2018-05-30T01:13:16.946Z</updated>
    
    <content type="html"><![CDATA[<p>Phalcon 3.4.0 已发布，Phalcon 是一个开源的 Web 框架，作为 PHP 语言 C 扩展，它提供了更高的性能与更低的资源消耗。<br><a id="more"></a><br>本次更新主要是对 bug 进行了修复，具体如下：</p>
<ul>
<li>Added Phalcon\Mvc\Router::attach to add Route object directly into Router #13326</li>
<li>Added the ability to listen request:beforeAuthorizationResolve and request:afterAuthorizationResolve events. This ability enables using custom authorization resolvers #13327</li>
<li>Added call event afterFetch in Phalcon\Mvc\Model:refresh #12220</li>
<li>Added Phalcon\Http\Response::getReasonPhrase to retrieve the reason phrase from the Statusheader #13314</li>
<li>Added Phalcon\Loader::setFileCheckingCallback to set internal file existence resolver #13360</li>
<li>Added ability to pass aggregation options for Phalcon\Mvc\Collection::aggregate #12302</li>
<li>Added Phalcon\Crypt::setHashAlgo to set the name of hashing algorithm used to the calculating message digest #13379</li>
<li>Added Phalcon\Crypt::getHashAlgo to get the name of hashing algorithm used to the calculating message digest #13379</li>
<li>Added Phalcon\Crypt::useSigning to set if the calculating message digest must used (NOTE: This feature will be enabled by default in Phalcon 4.0.0) #13379</li>
<li>Added Phalcon\Crypt::getAvailableHashAlgos to get a list of registered hashing algorithms suitable for calculating message digest #13379</li>
<li>Added Phalcon\Crypt::__construct so now the cipher can be set at object construction and the calculating message digest can be enabled without the need to call setCipher or useSigningexplicitly #13379</li>
<li>Added Phalcon\Crypt\Mismatch. Exceptions thrown in Phalcon\Crypt will use this class #13379</li>
<li>Added Phalcon\Http\Cookie::setSignKey to set sign key used to generate a message authentication code (eg. message digest)</li>
<li>Added Phalcon\Http\Response\Cookies::setSignKey to set sign key used to generate a message authentication code (eg. message digest)</li>
<li>Changed Phalcon\Crypt::setCipher so that IV length will be reconfigured during setting the cipher algorithm</li>
<li>Changed Phalcon\Crypt::setCipher so that method will throw Phalcon\Crypt\Exception if a cipher is unavailable</li>
<li>Fixed regression (#13308) for Phalcon\Debug\Dump::output to correctly work with detailed mode #13315</li>
<li>Fixed Phalcon\Mvc\Model\Query\Builder::having and Phalcon\Mvc\Model\Query\Builder::where to correctly merge the bind types #11487</li>
<li>Fixed Phalcon\Mvc\Model::setSnapshotData to properly sets the old snapshot</li>
<li>Do not throw Exception when superglobal does not exist #13252, #13254, #12918</li>
</ul>
<p>下载地址和完整更新内容请查看 <a href="https://github.com/phalcon/cphalcon/releases/tag/v3.3.1" target="_blank" rel="noopener">GitHub 发布主页</a>。</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Phalcon 3.4.0 已发布，Phalcon 是一个开源的 Web 框架，作为 PHP 语言 C 扩展，它提供了更高的性能与更低的资源消耗。&lt;br&gt;
    
    </summary>
    
      <category term="PHP" scheme="http://www.iooeo.com/categories/PHP/"/>
    
    
      <category term="PHP" scheme="http://www.iooeo.com/tags/PHP/"/>
    
      <category term="Phalcon" scheme="http://www.iooeo.com/tags/Phalcon/"/>
    
  </entry>
  
  <entry>
    <title>Symfony 4.0.11 发布，PHP 框架与可重用 PHP 组件集</title>
    <link href="http://www.iooeo.com/2018/05/28/Symfony-4-0-11-%E5%8F%91%E5%B8%83%EF%BC%8CPHP-%E6%A1%86%E6%9E%B6%E4%B8%8E%E5%8F%AF%E9%87%8D%E7%94%A8-PHP-%E7%BB%84%E4%BB%B6%E9%9B%86/"/>
    <id>http://www.iooeo.com/2018/05/28/Symfony-4-0-11-发布，PHP-框架与可重用-PHP-组件集/</id>
    <published>2018-05-28T01:24:03.000Z</published>
    <updated>2018-05-28T07:30:09.079Z</updated>
    
    <content type="html"><![CDATA[<p>Symfony 是一个用于 Web 应用程序的 PHP 框架和一组可重用的 PHP 组件，目前成千上万的 Web 应用程序（包括 BlaBlaCar.com 和 Spotify.com）以及大多数流行的 PHP 项目（包括 Drupal 和 Magento）都在使用 Symfony。<br><a id="more"></a><br>Symfony 4.0.11 发布了，这是一个安全更新版本，主要更新内容如下：</p>
<ul>
<li>bug #27364 [DI] 修复对非共享服务的未初始化引用的不良异常</li>
<li>bug #27359 [HttpFoundation] 修复 MimeTypeGuesser 初始化期间的 perf 问题</li>
<li>security #cve-2018-11408 [SecurityBundle] 如果无法配置 security.http_utils 则 fail</li>
<li>security #cve-2018-11406 当用户注销时清除 CSRF Token</li>
<li>security #cve-2018-11385 为 UsernamePasswordJsonAuthenticationListener 迁移会话</li>
<li>security #cve-2018-11385 将会话身份验证策略添加到 Guard 以避免会话固定</li>
<li>security #cve-2018-11385 将会话策略添加到所有听众以避免任何可能的会话固定</li>
<li>security #cve-2018-11386 [HttpFoundation] 当 MySQL 处于 loose 模式时，打破 PdoSessionHandler 中的无限循环</li>
<li>bug #27341 [WebProfilerBundle] 修正了验证器/转储跟踪CSS</li>
<li>bug #27337 [FrameworkBundle] 修复了 CacheClearCommand 中的错字</li>
</ul>
<p>详情见<a href="https://github.com/symfony/symfony/releases/tag/v4.0.11" target="_blank" rel="noopener">发布公告</a>。<br>下载地址：</p>
<ul>
<li><a href="https://github.com/symfony/symfony/archive/v4.0.11.zip" target="_blank" rel="noopener">Source code (zip)</a></li>
<li><a href="https://github.com/symfony/symfony/archive/v4.0.11.tar.gz" target="_blank" rel="noopener">Source code (tar.gz)</a></li>
</ul>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Symfony 是一个用于 Web 应用程序的 PHP 框架和一组可重用的 PHP 组件，目前成千上万的 Web 应用程序（包括 BlaBlaCar.com 和 Spotify.com）以及大多数流行的 PHP 项目（包括 Drupal 和 Magento）都在使用 Symfony。&lt;br&gt;
    
    </summary>
    
      <category term="PHP" scheme="http://www.iooeo.com/categories/PHP/"/>
    
    
      <category term="PHP" scheme="http://www.iooeo.com/tags/PHP/"/>
    
      <category term="Symfony" scheme="http://www.iooeo.com/tags/Symfony/"/>
    
  </entry>
  
  <entry>
    <title>HHVM 3.26.3 发布，修复 bug 并改进对 IDE 的支持</title>
    <link href="http://www.iooeo.com/2018/05/28/HHVM-3-26-3-%E5%8F%91%E5%B8%83%EF%BC%8C%E4%BF%AE%E5%A4%8D-bug-%E5%B9%B6%E6%94%B9%E8%BF%9B%E5%AF%B9-IDE-%E7%9A%84%E6%94%AF%E6%8C%81/"/>
    <id>http://www.iooeo.com/2018/05/28/HHVM-3-26-3-发布，修复-bug-并改进对-IDE-的支持/</id>
    <published>2018-05-28T01:23:48.000Z</published>
    <updated>2018-05-28T07:32:15.275Z</updated>
    
    <content type="html"><![CDATA[<p>HHVM（HipHopVM） 3.26.3 发布了，HHVM 是 Facebook 推出的用来执行 PHP 代码的虚拟机，它是一个 PHP 的 JIT(Just-In-Time) 编译器，同时具有产生快速代码和即时编译的优点。此次更新版本包含几个 bug 修复以及对 IDE 支持的改进：<br><a id="more"></a></p>
<ul>
<li>CVE-2018-6337：在 fork 上清除 folly :: secureRandom(random_bytes()和random_int()) 缓存</li>
<li>HackC: 将范围较小的括号表达式解析为转换</li>
<li>HackC: 修复与特殊的 Hack 类同名的 PHP 类</li>
<li>LSP: IDE 代码格式化功能使用 hackfmt 而不是 hh_format</li>
<li>LSP: 格式化代码时，遵守 IDE 提供的缩进宽度和制表符或空格首选项</li>
<li>LSP: 修复了 VSCode 中即用型格式的支持</li>
<li>LSP: 在类自动完成中使用语句应该只提示特征</li>
<li>改进不支持 yield 和 await 魔术功能的检测、处理和错误，提高了 PHP 兼容性</li>
<li>向 .hhconfig 添加 extra_paths= 选项以在项目根目录外包含依赖项。这是实验性特性，可能随时会移除</li>
</ul>
<p>详情见<a href="https://hhvm.com/blog/2018/05/24/hhvm-3.26.3.html" target="_blank" rel="noopener">发布公告</a>。<br>下载地址：</p>
<ul>
<li><a href="https://github.com/facebook/hhvm/archive/HHVM-3.26.3.zip" target="_blank" rel="noopener">Source code (zip)</a></li>
<li><a href="https://github.com/facebook/hhvm/archive/HHVM-3.26.3.tar.gz" target="_blank" rel="noopener">Source code (tar.gz)</a></li>
</ul>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;HHVM（HipHopVM） 3.26.3 发布了，HHVM 是 Facebook 推出的用来执行 PHP 代码的虚拟机，它是一个 PHP 的 JIT(Just-In-Time) 编译器，同时具有产生快速代码和即时编译的优点。此次更新版本包含几个 bug 修复以及对 IDE 支持的改进：&lt;br&gt;
    
    </summary>
    
      <category term="PHP" scheme="http://www.iooeo.com/categories/PHP/"/>
    
    
      <category term="PHP" scheme="http://www.iooeo.com/tags/PHP/"/>
    
      <category term="HHVM" scheme="http://www.iooeo.com/tags/HHVM/"/>
    
  </entry>
  
</feed>

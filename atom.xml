<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Ewan&#39;s Blog</title>
  <subtitle>Ewan&#39;s Blog | 杨依园技术博客 | 专注于PHP，涉及MySQL，Linux，Web，Nginx，Apache，Phalcon，Laravel，Redis，PostgreSql，Composer，Beanstalkd，Swoole</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://www.iooeo.com/"/>
  <updated>2017-07-21T05:59:54.000Z</updated>
  <id>http://www.iooeo.com/</id>
  
  <author>
    <name>Ewan</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Yii2  molde模型相关使用技巧</title>
    <link href="http://www.iooeo.com/2017/07/21/Yii2-molde%E6%A8%A1%E5%9E%8B%E7%9B%B8%E5%85%B3%E4%BD%BF%E7%94%A8%E6%8A%80%E5%B7%A7/"/>
    <id>http://www.iooeo.com/2017/07/21/Yii2-molde模型相关使用技巧/</id>
    <published>2017-07-21T05:24:51.000Z</published>
    <updated>2017-07-21T05:59:54.000Z</updated>
    
    <content type="html"><![CDATA[<p>今天整理一些 Yii2 Model模型在开发中常用到的一些方法我技巧。<br><code>模型是 MVC 模式中的一部分， 是代表业务数据、规则和逻辑的对象。</code><br><a id="more"></a></p>
<h2 id="获取查询-SQL"><a href="#获取查询-SQL" class="headerlink" title="获取查询 SQL"></a>获取查询 SQL</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">$query = User::find()-&gt;where([&apos;like&apos;, &apos;name&apos;, &apos;ewan%&apos;, false]);</div><div class="line"></div><div class="line">$commandQuery = clone $query;</div><div class="line">// SELECT * FROM `user` WHERE `name` LIKE &apos;ewan%&apos;</div><div class="line">echo $commandQuery-&gt;createCommand()-&gt;getRawSql();</div></pre></td></tr></table></figure>
<h2 id="简单查询技巧"><a href="#简单查询技巧" class="headerlink" title="简单查询技巧"></a>简单查询技巧</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div></pre></td><td class="code"><pre><div class="line">where(): 添加查询条件。</div><div class="line">select(): 添加查询字段。</div><div class="line">with(): 该查询应执行的关系列表。</div><div class="line">indexBy(): 根据索引的列的名称查询结果。</div><div class="line">asArray(): 以数组的形式返回每条记录。</div><div class="line">orderBy(): 按指定字段排序。</div><div class="line"></div><div class="line">User::find()-&gt;one();	// 返回一条数据，返回对象；</div><div class="line">User::find()-&gt;column();	// 返回查询结果中的第一列的值,返回数组；</div><div class="line">User::find()-&gt;scalar();	// 返回查询结果的第一行中的第一列的值；</div><div class="line">User::find()-&gt;all();	// 返回所有记录数据；</div><div class="line">User::find()-&gt;count();	// 返回记录的数量；</div><div class="line">User::find()-&gt;sum(&apos;num&apos;);	// 返回指定字段（&apos;num&apos;）的总和；</div><div class="line">User::find()-&gt;average(&apos;num&apos;);	// 返回指定字段（&apos;num&apos;）的平均值；</div><div class="line">User::find()-&gt;min(&apos;num&apos;);	// 返回指定字段（&apos;num&apos;）的最小值；</div><div class="line">User::find()-&gt;max(&apos;num&apos;);	// 返回指定字段（&apos;num&apos;）的最大值；</div><div class="line">User::find()-&gt;exists();	// 返回一个值，该值指示查询结果是否有数据；</div></pre></td></tr></table></figure>
<p>关联查询<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">User::hasOne()：返回对应关系的单条记录</div><div class="line">User::hasMany()：返回对应关系的多条记录</div></pre></td></tr></table></figure></p>
<h2 id="模型中事务处理"><a href="#模型中事务处理" class="headerlink" title="模型中事务处理"></a>模型中事务处理</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">Yii::$app-&gt;db-&gt;transaction(function() &#123;</div><div class="line">    $order = new Order($customer);</div><div class="line">    $order-&gt;save();</div><div class="line">    $order-&gt;addItems($items);</div><div class="line">&#125;);</div></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;今天整理一些 Yii2 Model模型在开发中常用到的一些方法我技巧。&lt;br&gt;&lt;code&gt;模型是 MVC 模式中的一部分， 是代表业务数据、规则和逻辑的对象。&lt;/code&gt;&lt;br&gt;
    
    </summary>
    
      <category term="PHP" scheme="http://www.iooeo.com/categories/PHP/"/>
    
      <category term="Yii2" scheme="http://www.iooeo.com/categories/PHP/Yii2/"/>
    
    
      <category term="PHP" scheme="http://www.iooeo.com/tags/PHP/"/>
    
      <category term="Yii2" scheme="http://www.iooeo.com/tags/Yii2/"/>
    
  </entry>
  
  <entry>
    <title>Apache 无法启动</title>
    <link href="http://www.iooeo.com/2017/07/20/Apache-%E5%9B%A0%E7%9B%91%E5%90%AC%E7%AB%AF%E5%8F%A3%E8%A2%AB%E5%8D%A0%E7%94%A8%E6%97%A0%E6%B3%95%E5%90%AF%E5%8A%A8/"/>
    <id>http://www.iooeo.com/2017/07/20/Apache-因监听端口被占用无法启动/</id>
    <published>2017-07-20T09:57:37.000Z</published>
    <updated>2017-07-21T03:11:29.000Z</updated>
    
    <content type="html"><![CDATA[<p>今天我一台 Windows 测试机 WAMP 的 Apache 无法启动，找了一下原因，原来 Apache 上某个监听的端口被占用，导致无法启动。<br>下面把发现问题，和解决问题的思路写一下。<br><a id="more"></a></p>
<h2 id="问题：WAMP-的-Apache-无法启动"><a href="#问题：WAMP-的-Apache-无法启动" class="headerlink" title="问题：WAMP 的 Apache 无法启动"></a>问题：WAMP 的 Apache 无法启动</h2><p>重启电脑后，打开 WAMP 一直显示橙色的图标，显示有一个程序无法启动。</p>
<h2 id="问题原因：Apache-因监听端口被占用无法启动"><a href="#问题原因：Apache-因监听端口被占用无法启动" class="headerlink" title="问题原因：Apache 因监听端口被占用无法启动"></a>问题原因：Apache 因监听端口被占用无法启动</h2><p>试了下 PHP 等正常运行无误，确认是 Apache 的问题，但是不知道为什么启动不了。</p>
<h3 id="手动启动-Apache"><a href="#手动启动-Apache" class="headerlink" title="手动启动 Apache"></a>手动启动 Apache</h3><p>我打开终端，将 Apache 的运行文件<em>\wamp64\bin\apache\apache2.4.23\bin\httpd.exe</em>拖到终端中执行，显示一下错误：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">$ D:\wamp64\bin\apache\apache2.4.23\bin\httpd.exe</div><div class="line">(OS 10048)通常每个套接字地址(协议/网络地址/端口)只允许使用一次。  : AH00072: mak</div><div class="line">e_sock: could not bind to address 0.0.0.0:8080</div><div class="line">AH00451: no listening sockets available, shutting down</div><div class="line">AH00015: Unable to open logs</div></pre></td></tr></table></figure></p>
<p>此处可以看出错误，是因为 Apache 监听的8080端口被别的程序占用，导致无法启动。</p>
<h2 id="解决问题：使-Apache-正常运行"><a href="#解决问题：使-Apache-正常运行" class="headerlink" title="解决问题：使 Apache 正常运行"></a>解决问题：使 Apache 正常运行</h2><p>问题找到了就好办了，一下给出两种解决的办法。</p>
<h3 id="第一种，更换-Apache-监听的8080端口至别的端口"><a href="#第一种，更换-Apache-监听的8080端口至别的端口" class="headerlink" title="第一种，更换 Apache 监听的8080端口至别的端口"></a>第一种，更换 Apache 监听的8080端口至别的端口</h3><p>此种方法相对简单一些，如果在没有强制端口需求的情况下，也是最为推荐的方法。<br>打开你的Apache 虚拟主机配置文件<em>\wamp64\bin\apache\apache2.4.23\conf\extra\httpd-vhosts.com</em>,找到冲突的端口配置，如下：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">&lt;VirtualHost *:8080&gt;</div><div class="line">	...</div><div class="line">	...</div><div class="line">	...</div><div class="line">&lt;/VirtualHost&gt;</div></pre></td></tr></table></figure></p>
<p>将8080（冲突的端口）修改为其他的端口号，重启 WAMP 或者 Apache就可以正常运行了。</p>
<h3 id="第二种，kill-掉占用冲突端口的程序"><a href="#第二种，kill-掉占用冲突端口的程序" class="headerlink" title="第二种，kill 掉占用冲突端口的程序"></a>第二种，kill 掉占用冲突端口的程序</h3><p>比如你就想使用这个端口，或者有强制需求要用这个端口，那就需要干掉占用这个端口的程序了。</p>
<h4 id="找到占用冲突端口的进程号"><a href="#找到占用冲突端口的进程号" class="headerlink" title="找到占用冲突端口的进程号"></a>找到占用冲突端口的进程号</h4><p>在终端执行命令，查看机器端口占用情况：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ netstat -ano</div></pre></td></tr></table></figure></p>
<p>会显示如下内容：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line">活动连接</div><div class="line"></div><div class="line">  协议  本地地址          外部地址        状态           PID</div><div class="line">  TCP    0.0.0.0:135            0.0.0.0:0              LISTENING       976</div><div class="line">  TCP    0.0.0.0:445            0.0.0.0:0              LISTENING       4</div><div class="line">  TCP    0.0.0.0:2343           0.0.0.0:0              LISTENING       1972</div><div class="line">  TCP    0.0.0.0:3306           0.0.0.0:0              LISTENING       3732</div><div class="line">  TCP    0.0.0.0:3389           0.0.0.0:0              LISTENING       1532</div><div class="line">  TCP    0.0.0.0:3580           0.0.0.0:0              LISTENING       2100</div><div class="line">  TCP    0.0.0.0:3582           0.0.0.0:0              LISTENING       2620</div><div class="line">  TCP    0.0.0.0:8080           0.0.0.0:0              LISTENING       3348</div><div class="line">  TCP    0.0.0.0:9418           0.0.0.0:0              LISTENING       4848</div></pre></td></tr></table></figure></p>
<p>通过上面的内容我们会看到监听8080端口的PID（进程号） 为3348。</p>
<h4 id="干掉-PID-为3348的程序"><a href="#干掉-PID-为3348的程序" class="headerlink" title="干掉 PID 为3348的程序"></a>干掉 PID 为3348的程序</h4><p>右击桌面底部的工具栏，选择启动任务管理器，然后点击服务，找到 PID 为3348的程序，右击选择停止服务，这样就可以了。<br><code>右击工具栏--&gt;启动任务管理器--&gt;服务--&gt;右击 PID 为3348的服务--&gt;停止服务</code><br>重启 WAMP 或者 Apache就可以正常运行了。</p>
<p>其实解决问题并不难，重要的是我们怎么样才能正确的找到问题的所在，这需要我们平时要树立一套比较合理的处理的问题的思路，<code>要做一个有思想的开发者!</code></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;今天我一台 Windows 测试机 WAMP 的 Apache 无法启动，找了一下原因，原来 Apache 上某个监听的端口被占用，导致无法启动。&lt;br&gt;下面把发现问题，和解决问题的思路写一下。&lt;br&gt;
    
    </summary>
    
      <category term="计算机" scheme="http://www.iooeo.com/categories/%E8%AE%A1%E7%AE%97%E6%9C%BA/"/>
    
    
      <category term="WAMP" scheme="http://www.iooeo.com/tags/WAMP/"/>
    
      <category term="计算机" scheme="http://www.iooeo.com/tags/%E8%AE%A1%E7%AE%97%E6%9C%BA/"/>
    
      <category term="Apache" scheme="http://www.iooeo.com/tags/Apache/"/>
    
  </entry>
  
  <entry>
    <title>Hexo 底部修改</title>
    <link href="http://www.iooeo.com/2017/07/20/Hexo-%E5%BA%95%E9%83%A8%E4%BF%AE%E6%94%B9/"/>
    <id>http://www.iooeo.com/2017/07/20/Hexo-底部修改/</id>
    <published>2017-07-20T08:09:42.000Z</published>
    <updated>2017-07-20T08:13:20.000Z</updated>
    
    <content type="html"><![CDATA[<p>如果你想将博客底部修改的话，找到<em>/themes/next/layout/_partials/</em>，<br><a id="more"></a><br>你可以按照你想要的内容编写 HTML 代码，就想我这样：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div></pre></td><td class="code"><pre><div class="line">&#123;% if theme.copyright %&#125;</div><div class="line">&lt;div class=&quot;powered-by&quot;&gt;</div><div class="line">  &lt;span class=&quot;links-of-author-item&quot;&gt;</div><div class="line">    &lt;a href=&quot;https://github.com/yangyiyuan&quot; target=&quot;_blank&quot; title=&quot;GitHub&quot;&gt;</div><div class="line">    &lt;i class=&quot;fa fa-fw fa-github&quot;&gt;&lt;/i&gt;</div><div class="line">    GitHub</div><div class="line">    &lt;/a&gt;</div><div class="line">  &lt;/span&gt;</div><div class="line">&lt;/div&gt;</div><div class="line"></div><div class="line">&lt;div class=&quot;theme-info&quot;&gt;</div><div class="line">  &lt;span class=&quot;links-of-author-item&quot;&gt;</div><div class="line">    &lt;a href=&quot;http://www.iooeo.com/about/&quot; target=&quot;_blank&quot; title=&quot;杨依园&quot;&gt;</div><div class="line">    &lt;i class=&quot;fa fa-fw fa-hand-o-right&quot;&gt;&lt;/i&gt;</div><div class="line">    做一个有思想的开发者---杨依园</div><div class="line">    &lt;/a&gt;</div><div class="line">  &lt;/span&gt;</div><div class="line">&lt;/div&gt;</div><div class="line">&#123;% endif %&#125;</div></pre></td></tr></table></figure></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;如果你想将博客底部修改的话，找到&lt;em&gt;/themes/next/layout/_partials/&lt;/em&gt;，&lt;br&gt;
    
    </summary>
    
      <category term="Hexo" scheme="http://www.iooeo.com/categories/Hexo/"/>
    
    
      <category term="Hexo" scheme="http://www.iooeo.com/tags/Hexo/"/>
    
  </entry>
  
  <entry>
    <title>Hexo  文章版权转载链接</title>
    <link href="http://www.iooeo.com/2017/07/20/Hexo-%E6%96%87%E7%AB%A0%E7%89%88%E6%9D%83%E8%BD%AC%E8%BD%BD%E9%93%BE%E6%8E%A5/"/>
    <id>http://www.iooeo.com/2017/07/20/Hexo-文章版权转载链接/</id>
    <published>2017-07-20T07:50:12.000Z</published>
    <updated>2017-07-20T07:53:36.000Z</updated>
    
    <content type="html"><![CDATA[<p>如果文章末尾需要添加版权信息和转载链接的话，找到<em>/hemes/next/layout/_macro/post.swig</em>，<br><a id="more"></a><br>找到其中的打赏部分代码，如下所示：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">&lt;div&gt;</div><div class="line">  &#123;% if ! is_index %&#125;</div><div class="line">    &#123;% include &apos;reward.swig&apos; %&#125;</div><div class="line">  &#123;% endif %&#125;</div><div class="line">&lt;/div&gt;</div></pre></td></tr></table></figure></p>
<p>修改成下面这个样子：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line">&lt;div align=&quot;center&quot;&gt;</div><div class="line">  &#123;% if not is_index %&#125;</div><div class="line">    &lt;div class=&quot;copyright&quot;&gt;</div><div class="line">    &lt;p&gt;&lt;span&gt;</div><div class="line">    &lt;b&gt;本文地址：&lt;/b&gt;&lt;a href=&quot;&#123;&#123; url_for(page.path) &#125;&#125;&quot; title=&quot;&#123;&#123; page.title &#125;&#125;&quot;&gt;&#123;&#123; page.permalink &#125;&#125;&lt;/a&gt;&lt;br/&gt;&lt;b&gt;转载请注明出处，谢谢！&lt;/b&gt;</div><div class="line">    &lt;/span&gt;&lt;/p&gt;</div><div class="line">    &lt;/div&gt;</div><div class="line">    &#123;% include &apos;reward.swig&apos; %&#125;</div><div class="line">  &#123;% endif %&#125;</div><div class="line">&lt;/div&gt;</div></pre></td></tr></table></figure></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;如果文章末尾需要添加版权信息和转载链接的话，找到&lt;em&gt;/hemes/next/layout/_macro/post.swig&lt;/em&gt;，&lt;br&gt;
    
    </summary>
    
      <category term="Hexo" scheme="http://www.iooeo.com/categories/Hexo/"/>
    
    
      <category term="Hexo" scheme="http://www.iooeo.com/tags/Hexo/"/>
    
  </entry>
  
  <entry>
    <title>Hexo Next 头像圆形并旋转</title>
    <link href="http://www.iooeo.com/2017/07/20/Hexo-Next-%E5%A4%B4%E5%83%8F%E5%9C%86%E5%BD%A2%E5%B9%B6%E6%97%8B%E8%BD%AC/"/>
    <id>http://www.iooeo.com/2017/07/20/Hexo-Next-头像圆形并旋转/</id>
    <published>2017-07-20T07:38:22.000Z</published>
    <updated>2017-07-20T07:42:49.000Z</updated>
    
    <content type="html"><![CDATA[<p>将头像显示成圆形，鼠标放上去有旋转效果，就像我的一样.<br>找到<em>/themes/next/source/css/_common/components/sidebar/sidebar-author.styl</em><br><a id="more"></a><br>做以下修改：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div></pre></td><td class="code"><pre><div class="line">.site-author-image &#123;</div><div class="line">  display: block;</div><div class="line">  margin: 0 auto;</div><div class="line">  padding: $site-author-image-padding;</div><div class="line">  max-width: $site-author-image-width;</div><div class="line">  height: $site-author-image-height;</div><div class="line">  border: $site-author-image-border-width solid $site-author-image-border-color;</div><div class="line">  # 头像圆形样式</div><div class="line">  /* start */</div><div class="line">  border-radius: 50%</div><div class="line">  webkit-transition: 1.4s all;</div><div class="line">  moz-transition: 1.4s all;</div><div class="line">  ms-transition: 1.4s all;</div><div class="line">  transition: 1.4s all;</div><div class="line">  /* end */</div><div class="line">&#125;</div><div class="line"></div><div class="line">.site-author-name &#123;</div><div class="line">  margin: $site-author-name-margin;</div><div class="line">  text-align: $site-author-name-align;</div><div class="line">  color: $site-author-name-color;</div><div class="line">  font-weight: $site-author-name-weight;</div><div class="line">&#125;</div><div class="line"></div><div class="line">.site-description &#123;</div><div class="line">  margin-top: $site-description-margin-top;</div><div class="line">  text-align: $site-description-align;</div><div class="line">  font-size: $site-description-font-size;</div><div class="line">  color: $site-description-color;</div><div class="line">&#125;</div><div class="line"># 头像旋转事件</div><div class="line">/* start */</div><div class="line">.site-author-image:hover &#123;</div><div class="line">  background-color: #55DAE1;</div><div class="line">  webkit-transform: rotate(360deg) scale(1.1);</div><div class="line">  moz-transform: rotate(360deg) scale(1.1);</div><div class="line">  ms-transform: rotate(360deg) scale(1.1);</div><div class="line">  transform: rotate(360deg) scale(1.1);</div><div class="line">&#125;</div><div class="line">/* end */</div></pre></td></tr></table></figure></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;将头像显示成圆形，鼠标放上去有旋转效果，就像我的一样.&lt;br&gt;找到&lt;em&gt;/themes/next/source/css/_common/components/sidebar/sidebar-author.styl&lt;/em&gt;&lt;br&gt;
    
    </summary>
    
      <category term="Hexo" scheme="http://www.iooeo.com/categories/Hexo/"/>
    
    
      <category term="Hexo" scheme="http://www.iooeo.com/tags/Hexo/"/>
    
  </entry>
  
  <entry>
    <title>Yii2 表单提交错误调试</title>
    <link href="http://www.iooeo.com/2017/07/20/Yii2-%E8%A1%A8%E5%8D%95%E6%8F%90%E4%BA%A4%E9%94%99%E8%AF%AF%E8%B0%83%E8%AF%95/"/>
    <id>http://www.iooeo.com/2017/07/20/Yii2-表单提交错误调试/</id>
    <published>2017-07-20T05:59:02.000Z</published>
    <updated>2017-07-20T06:47:30.000Z</updated>
    
    <content type="html"><![CDATA[<p>在使用yii 开发项目的时候经常碰到一些数据插入时提交失败的情况，为了更精准的找到错误，yii 给我提供一下方法，用以调试<br><a id="more"></a><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">echo current(array_values($model-&gt;getFirstErrors()));</div><div class="line">exit;</div></pre></td></tr></table></figure></p>
<p><em>model</em>调用<em>load()</em>方法时出错时，用这个方法也可以</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;在使用yii 开发项目的时候经常碰到一些数据插入时提交失败的情况，为了更精准的找到错误，yii 给我提供一下方法，用以调试&lt;br&gt;
    
    </summary>
    
      <category term="PHP" scheme="http://www.iooeo.com/categories/PHP/"/>
    
      <category term="Yii2" scheme="http://www.iooeo.com/categories/PHP/Yii2/"/>
    
    
      <category term="PHP" scheme="http://www.iooeo.com/tags/PHP/"/>
    
      <category term="Yii2" scheme="http://www.iooeo.com/tags/Yii2/"/>
    
  </entry>
  
  <entry>
    <title>Mac Python 版本切换</title>
    <link href="http://www.iooeo.com/2017/07/20/Mac-Python-%E7%89%88%E6%9C%AC%E5%88%87%E6%8D%A2/"/>
    <id>http://www.iooeo.com/2017/07/20/Mac-Python-版本切换/</id>
    <published>2017-07-20T03:24:50.000Z</published>
    <updated>2017-07-20T03:42:34.000Z</updated>
    
    <content type="html"><![CDATA[<p>Mac 上自带的 Python 版本是2.7的，对于编程语言的发展来说，每一个大的版本更新都有很大的改变，所以我碰到了版本切换的问题。<br><a id="more"></a></p>
<h2 id="下载安装新版本"><a href="#下载安装新版本" class="headerlink" title="下载安装新版本"></a>下载安装新版本</h2><p>首先去官网下载一个最新的Python 版本，<a href="https://www.python.org/downloads/mac-osx/" target="_blank" rel="external">下载链接</a><br>下载好以后下一步下一步安装就可以了。</p>
<h2 id="切换-Python-版本"><a href="#切换-Python-版本" class="headerlink" title="切换 Python 版本"></a>切换 Python 版本</h2><p>安装好以后不代表就完成版本切换了。不信的话，你可以终端执行一下<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ python -V</div></pre></td></tr></table></figure></p>
<p>显示的还是2.7（老版本）的版本，那下面就开始切换吧</p>
<ul>
<li>首先要找到你新版本安装的路径<em>/usr/local/bin/python3</em></li>
<li>修改软链接到你所安装的python版本中：默认python命令是在/usr/bin/目录下 <figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">$ sudo mv /usr/bin/python /usr/bin/python2.7.0</div><div class="line">$ sudo ln -s /usr/local/bin/python3 /usr/bin/python  #把系统默认python命令改成python3</div></pre></td></tr></table></figure>
</li>
</ul>
<p>完成以后在终端输入<code>python -V</code>即可查看python版本了，反正我是是最新的版本了。</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Mac 上自带的 Python 版本是2.7的，对于编程语言的发展来说，每一个大的版本更新都有很大的改变，所以我碰到了版本切换的问题。&lt;br&gt;
    
    </summary>
    
      <category term="python" scheme="http://www.iooeo.com/categories/python/"/>
    
    
      <category term="python" scheme="http://www.iooeo.com/tags/python/"/>
    
      <category term="Mac" scheme="http://www.iooeo.com/tags/Mac/"/>
    
  </entry>
  
  <entry>
    <title>python 开篇</title>
    <link href="http://www.iooeo.com/2017/07/20/python-%E5%BC%80%E7%AF%87/"/>
    <id>http://www.iooeo.com/2017/07/20/python-开篇/</id>
    <published>2017-07-20T02:22:43.000Z</published>
    <updated>2017-07-20T03:03:00.000Z</updated>
    
    <content type="html"><![CDATA[<p>Python 是一种面向对象的解释型计算机程序设计语言，由荷兰人Guido van Rossum于1989年发明，第一个公开发行版发行于1991年。<br>Python是纯粹的自由软件， 源代码和解释器CPython遵循 GPL(GNU General Public License)协议 。Python语法简洁清晰，特色之一是强制用空白符(white space)作为语句缩进。<br>Python具有丰富和强大的库。它常被昵称为胶水语言，能够把用其他语言制作的各种模块（尤其是C/C++）很轻松地联结在一起。常见的一种应用情形是，使用Python快速生成程序的原型（有时甚至是程序的最终界面），然后对其中有特别要求的部分，用更合适的语言改写，比如3D游戏中的图形渲染模块，性能要求特别高，就可以用C/C++重写，而后封装为Python可以调用的扩展类库。需要注意的是在您使用扩展类库时可能需要考虑平台问题，某些可能不提供跨平台的实现。<br><a id="more"></a><br>由于没有实际项目运用，后边的文章权当是学习笔记了，可能只是一些基础的知识点，从各种博客文档中都能找得到，但写下自己的学习心得还是有必要的，希望在以后能有项目去运用到，这样我所学习的就不仅仅是一些基础的知识点了。</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Python 是一种面向对象的解释型计算机程序设计语言，由荷兰人Guido van Rossum于1989年发明，第一个公开发行版发行于1991年。&lt;br&gt;Python是纯粹的自由软件， 源代码和解释器CPython遵循 GPL(GNU General Public License)协议 。Python语法简洁清晰，特色之一是强制用空白符(white space)作为语句缩进。&lt;br&gt;Python具有丰富和强大的库。它常被昵称为胶水语言，能够把用其他语言制作的各种模块（尤其是C/C++）很轻松地联结在一起。常见的一种应用情形是，使用Python快速生成程序的原型（有时甚至是程序的最终界面），然后对其中有特别要求的部分，用更合适的语言改写，比如3D游戏中的图形渲染模块，性能要求特别高，就可以用C/C++重写，而后封装为Python可以调用的扩展类库。需要注意的是在您使用扩展类库时可能需要考虑平台问题，某些可能不提供跨平台的实现。&lt;br&gt;
    
    </summary>
    
      <category term="python" scheme="http://www.iooeo.com/categories/python/"/>
    
    
      <category term="python" scheme="http://www.iooeo.com/tags/python/"/>
    
  </entry>
  
  <entry>
    <title>Hexo 新建菜单(menu) 存放归档文章</title>
    <link href="http://www.iooeo.com/2017/07/20/Hexo-%E6%96%B0%E5%BB%BA%E8%8F%9C%E5%8D%95-menu-%E5%AD%98%E6%94%BE%E5%BD%92%E6%A1%A3/"/>
    <id>http://www.iooeo.com/2017/07/20/Hexo-新建菜单-menu-存放归档/</id>
    <published>2017-07-20T01:53:08.000Z</published>
    <updated>2017-07-20T03:07:39.000Z</updated>
    
    <content type="html"><![CDATA[<p>最近在看Python，想在首页上建一个名为Python的菜单，然后相关Python的文章都放在该分类下。<br><a id="more"></a><br>本来的想法是点开 Python 菜单会显示像首页的一样的文章列表，但试了几次没有成功，索性就就采取了一种分类归档的方法，效果还可以。</p>
<h2 id="生成-post-文章-时默认生成-categories-配置项"><a href="#生成-post-文章-时默认生成-categories-配置项" class="headerlink" title="生成 post(文章)时默认生成 categories 配置项"></a>生成 post(文章)时默认生成 categories 配置项</h2><p>在项目目录下找到<em>/scaffolds/post.md</em>，添加文章的 categories 的配置，如下<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">---</div><div class="line">title: &#123;&#123; title &#125;&#125;</div><div class="line">date: &#123;&#123; date &#125;&#125;</div><div class="line">tags:</div><div class="line">	# 此处为文章标签</div><div class="line">categories:</div><div class="line">	# 此处为文章分类</div><div class="line">---</div></pre></td></tr></table></figure></p>
<h2 id="写文章时，配置-categories"><a href="#写文章时，配置-categories" class="headerlink" title="写文章时，配置 categories"></a>写文章时，配置 categories</h2><p>下面我开始写一篇关于 Python 的文章<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo n &quot;python 开篇&quot;</div></pre></td></tr></table></figure></p>
<p>文章里面配置 categories<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">---</div><div class="line">title: python 开篇</div><div class="line">date: 2017-07-20 10:22:43</div><div class="line">tags:</div><div class="line">	- python</div><div class="line">categories:</div><div class="line">	- python</div><div class="line">---</div><div class="line">Python 是一种面向对象的解释型计算机程序设计语言，由荷兰人Guido van Rossum于1989年发明，第一个公开发行版发行于1991年。</div></pre></td></tr></table></figure></p>
<p>此处我已经配置好了标签（tags）和分类（categories），下面生成一下静态页面<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo g</div></pre></td></tr></table></figure></p>
<p>这时你会发现<em>/public/categories/</em>文件夹下，已经生成了<em>python</em>的文件夹</p>
<h2 id="首页显示-python-菜单"><a href="#首页显示-python-菜单" class="headerlink" title="首页显示 python 菜单"></a>首页显示 python 菜单</h2><p>这里就是要在博客首页上显示 python 菜单的时候了，首先打开你主题的配置文件<em>/themes/next/_config.yml</em>(我这里是用的 next)。<br>找到<em>menu</em> ，做一下添加<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">menu:</div><div class="line">  home: /</div><div class="line">  categories: /categories/</div><div class="line">  archives: /archives/</div><div class="line">  tags: /tags/</div><div class="line">  python: /categories/python/ # 此处为新添加的菜单</div><div class="line">  guestbook: /guestbook</div><div class="line">  about: /about/</div></pre></td></tr></table></figure></p>
<p>配置python菜单所用的图标<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line">menu_icons:</div><div class="line">  enable: true</div><div class="line">  #KeyMapsToMenuItemKey: NameOfTheIconFromFontAwesome</div><div class="line">  home: home</div><div class="line">  about: user</div><div class="line">  categories: th</div><div class="line">  schedule: calendar</div><div class="line">  tags: tags</div><div class="line">  archives: archive</div><div class="line">  sitemap: sitemap</div><div class="line">  commonweal: heartbeat</div><div class="line">  guestbook: pencil</div><div class="line">  python: file-powerpoint-o # 此处为 python菜单的图片配置</div></pre></td></tr></table></figure></p>
<h2 id="菜单名称配置"><a href="#菜单名称配置" class="headerlink" title="菜单名称配置"></a>菜单名称配置</h2><p>上面的步骤做完以后，如果你着急刷新页面看了效果，就会看到新菜单的名称是<em>menu.python</em>，显然不是我们想要的，那就继续往下看<br>首先查看项目目录下的<em>/_config.yml</em>的<em>language</em>配置，我的是这样的<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">language: zh-Hans</div></pre></td></tr></table></figure></p>
<p>然后去模板目录找到相应的语言配置文件<em>/themes/languages/zh-Hans.yml</em>，<em>menu</em>处添加一下配置<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line">menu:</div><div class="line">  home: 首页</div><div class="line">  archives: 归档</div><div class="line">  categories: 分类</div><div class="line">  tags: 标签</div><div class="line">  about: 关于</div><div class="line">  search: 搜索</div><div class="line">  schedule: 日程表</div><div class="line">  sitemap: 站点地图</div><div class="line">  commonweal: 公益404</div><div class="line">  guestbook: 留言</div><div class="line">  python: python # python菜单显示的名称</div></pre></td></tr></table></figure></p>
<p>这样就算彻底完成了，赶紧去看看效果吧。<br>以后写Python 相关的文章的话，只需要配置 categories 为 python 就可以自动归档到python 菜单下了。</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;最近在看Python，想在首页上建一个名为Python的菜单，然后相关Python的文章都放在该分类下。&lt;br&gt;
    
    </summary>
    
      <category term="Hexo" scheme="http://www.iooeo.com/categories/Hexo/"/>
    
    
      <category term="Hexo" scheme="http://www.iooeo.com/tags/Hexo/"/>
    
  </entry>
  
  <entry>
    <title>评论系统相继关闭</title>
    <link href="http://www.iooeo.com/2017/07/07/%E8%AF%84%E8%AE%BA%E7%B3%BB%E7%BB%9F%E7%9B%B8%E7%BB%A7%E5%85%B3%E9%97%AD/"/>
    <id>http://www.iooeo.com/2017/07/07/评论系统相继关闭/</id>
    <published>2017-07-07T03:28:57.000Z</published>
    <updated>2017-07-20T03:45:15.000Z</updated>
    
    <content type="html"><![CDATA[<blockquote>
<p>前段时间,多说系统宣布关闭停止服务,偶感还挺可惜的.<br>最近折腾这上了网易跟帖,来替换多说,今天登陆网易跟帖后台,又看到了一个不好的消息</p>
</blockquote>
<p>网易云跟贴停止服务公告<br>亲爱的朋友们：</p>
<p>因公司业务发展需要，我们不得不遗憾地通知大家，云跟贴产品将于2017年8月1日停止服务。在此之前可以通过后台的数据导出功能导出自己站点的跟贴数据。感谢大家一直以来对云跟贴的支持与厚爱，对于此次产品关停给您带来的不便我们深表歉意，希望在网易其他产品与业务上，我们能继续为您服务！</p>
<p>网易云跟贴</p>
<p>2017年7月6日</p>
]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;前段时间,多说系统宣布关闭停止服务,偶感还挺可惜的.&lt;br&gt;最近折腾这上了网易跟帖,来替换多说,今天登陆网易跟帖后台,又看到了一个不好的消息&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;网易云跟贴停止服务公告&lt;br&gt;亲爱的朋友们：&lt;/p&gt;
&lt;p&gt;因公
    
    </summary>
    
      <category term="杂谈" scheme="http://www.iooeo.com/categories/%E6%9D%82%E8%B0%88/"/>
    
    
      <category term="微语" scheme="http://www.iooeo.com/tags/%E5%BE%AE%E8%AF%AD/"/>
    
      <category term="胡侃" scheme="http://www.iooeo.com/tags/%E8%83%A1%E4%BE%83/"/>
    
  </entry>
  
  <entry>
    <title>lantern Mac版编译 免费</title>
    <link href="http://www.iooeo.com/2017/07/07/lantern-Mac%E7%89%88%E7%BC%96%E8%AF%91-%E5%85%8D%E8%B4%B9/"/>
    <id>http://www.iooeo.com/2017/07/07/lantern-Mac版编译-免费/</id>
    <published>2017-07-07T03:06:12.000Z</published>
    <updated>2017-07-07T09:52:32.000Z</updated>
    
    <content type="html"><![CDATA[<p>蓝灯,Mac版编译</p>
<h2 id="Homebrew"><a href="#Homebrew" class="headerlink" title="Homebrew"></a>Homebrew</h2><p><em>Homebrew</em>,macOS 缺失的软件包管理器,没用过的可以过去了解一下<a href="https://brew.sh/index_zh-cn.html" target="_blank" rel="external">Homebrew</a><br>lantern之前先安装一下<em>Homebrew</em>,终端输入<br><a id="more"></a><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ /usr/bin/ruby -e &quot;$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)&quot;</div></pre></td></tr></table></figure></p>
<p><em>Homebrew</em>安装完成以后,安装git,已安装的可以忽略<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ brew install git</div></pre></td></tr></table></figure></p>
<h2 id="Node安装"><a href="#Node安装" class="headerlink" title="Node安装"></a>Node安装</h2><ul>
<li>Node.js 是一个基于 Chrome V8 引擎的 JavaScript 运行环境</li>
<li>Node.js 使用了一个事件驱动、非阻塞式 I/O 的模型,使其轻量又高效</li>
<li>Node.js 的包管理器 npm,是全球最大的开源库生态系统<br><a href="http://nodejs.cn/download/" target="_blank" rel="external">Node下载</a>,选择Mac版下载,安装下一步下一步就行….</li>
</ul>
<h2 id="其他预安装"><a href="#其他预安装" class="headerlink" title="其他预安装"></a>其他预安装</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">$ brew install go</div><div class="line">$ npm i gulp-cli -g</div><div class="line">$ npm install -g appdmg</div><div class="line">$ npm install -g svgexport</div></pre></td></tr></table></figure>
<h2 id="lantern-Mac编译"><a href="#lantern-Mac编译" class="headerlink" title="lantern Mac编译"></a>lantern Mac编译</h2><p>找个文件夹把lantern下载下来<br>可以直接用GitHub下载,cd到你放置lantern的文件夹,终端输入命令如下<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ git clone --depth=1 https://github.com/getlantern/lantern.git</div></pre></td></tr></table></figure></p>
<p>下载以后<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">$ cd lantern</div><div class="line">$ export VERSION=9.9.9</div><div class="line">$ make darwin</div></pre></td></tr></table></figure></p>
<p>编译的时候回出现以下错误<br><img src="http://ogpq2zwg5.bkt.clouddn.com/WechatIMG7.jpeg" alt="编译是错误图片"><br>根据错误信息指出的路径在lantern文件夹中找到对应的文件及行数</p>
<ul>
<li>只需要把<em>MaxIdleTime</em>改为<em>IdleConnTimeout</em></li>
<li>然后把下面紧接的调用<em>EnforceMaxIdleTime()</em>这个方法的语句注释掉</li>
</ul>
<p>就改这两个文件中的4行就行,重新编译<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ make darwin</div></pre></td></tr></table></figure></p>
<p>编译完成后,你会在你的lantern文件夹中找到名为<em>lantern_darwin_amd64</em>的文件,说明完全没问题了</p>
<h3 id="运行"><a href="#运行" class="headerlink" title="运行"></a>运行</h3><p>然后在你的Mac上搜索一下<em>lantern_darwin_amd64</em>,双击打开就可以了</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;蓝灯,Mac版编译&lt;/p&gt;
&lt;h2 id=&quot;Homebrew&quot;&gt;&lt;a href=&quot;#Homebrew&quot; class=&quot;headerlink&quot; title=&quot;Homebrew&quot;&gt;&lt;/a&gt;Homebrew&lt;/h2&gt;&lt;p&gt;&lt;em&gt;Homebrew&lt;/em&gt;,macOS 缺失的软件包管理器,没用过的可以过去了解一下&lt;a href=&quot;https://brew.sh/index_zh-cn.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Homebrew&lt;/a&gt;&lt;br&gt;lantern之前先安装一下&lt;em&gt;Homebrew&lt;/em&gt;,终端输入&lt;br&gt;
    
    </summary>
    
      <category term="Mac" scheme="http://www.iooeo.com/categories/Mac/"/>
    
    
      <category term="Mac" scheme="http://www.iooeo.com/tags/Mac/"/>
    
      <category term="lantern" scheme="http://www.iooeo.com/tags/lantern/"/>
    
      <category term="VPN" scheme="http://www.iooeo.com/tags/VPN/"/>
    
  </entry>
  
  <entry>
    <title>Hexo+Github+coding搭建个人博客 - 百度和Google收录篇</title>
    <link href="http://www.iooeo.com/2017/07/04/Hexo+Github+coding%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%20-%20%E7%99%BE%E5%BA%A6%E5%92%8CGoogle%E6%94%B6%E5%BD%95%E7%AF%87/"/>
    <id>http://www.iooeo.com/2017/07/04/Hexo+Github+coding搭建个人博客 - 百度和Google收录篇/</id>
    <published>2017-07-04T06:39:48.000Z</published>
    <updated>2017-07-04T08:45:07.000Z</updated>
    
    <content type="html"><![CDATA[<p>网站地图</p>
<blockquote>
<p>网站地图，又称站点地图，它就是一个页面，上面放置了网站上需要搜索引擎抓取的所有页面的链接（注：不是所有页面）。大多数人在网站上找不到自己所需要的信息时，可能会将网站地图作为一种补救措施。搜索引擎蜘蛛非常喜欢网站地图</p>
</blockquote>
<a id="more"></a>
<h2 id="Hexo博客生产站点地图"><a href="#Hexo博客生产站点地图" class="headerlink" title="Hexo博客生产站点地图"></a>Hexo博客生产站点地图</h2><p>进入Hexo博客根目录，安装百度和Google的站点地图生成插件<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">$ npm install hexo-generator-baidu-sitemap --save</div><div class="line">$ npm install hexo-generator-sitemap --save</div></pre></td></tr></table></figure></p>
<p>在博客根目录的_config.yml配置文件种添加一下代码<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"># 自动生成sitemap</div><div class="line">sitemap:</div><div class="line">  path: sitemap.xml</div><div class="line">baidusitemap:</div><div class="line">  path: baidusitemap.xml</div></pre></td></tr></table></figure></p>
<p>编译部署博客代码<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">$ hexo generate</div><div class="line">$ hexo deploy</div></pre></td></tr></table></figure></p>
<p>边已完成,你会发现你的博客编译完成的代码目录public种生成了baidusitemap.xml和sitemap.xml<br>此时我们访问域名下面的这两个文件,看看有没有</p>
<ul>
<li><a href="http://www.iooeo.com/baidusitemap.xml">http://www.iooeo.com/baidusitemap.xml</a></li>
<li><a href="http://www.iooeo.com/sitemap.xml">http://www.iooeo.com/sitemap.xml</a></li>
</ul>
<p>这样百度和Google的爬虫就可以通过这个来爬取你的博客内容了</p>
<h2 id="查看博客是否已经被收录"><a href="#查看博客是否已经被收录" class="headerlink" title="查看博客是否已经被收录"></a>查看博客是否已经被收录</h2><p>在百度和Google分别输入搜索:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">site:iooeo.com</div></pre></td></tr></table></figure></p>
<p>这里需要将iooeo.com换成你们自己的域名</p>
<h2 id="百度验证网站"><a href="#百度验证网站" class="headerlink" title="百度验证网站"></a>百度验证网站</h2><ul>
<li><a href="http://zhanzhang.baidu.com/linksubmit/url" target="_blank" rel="external">百度链接提交</a></li>
</ul>
<p>在链接提交输入框中输入你的域名,点击提交即可</p>
<h3 id="验证站点"><a href="#验证站点" class="headerlink" title="验证站点"></a>验证站点</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">点击站点管理,依次输入信息</div><div class="line">第二步*验证网站*,选择文件验证,下载验证文件</div><div class="line">将验证文件放在所应用的主题的source下`/themes/主题/source/`</div><div class="line">执行文件部署</div><div class="line">$ hexo generate</div><div class="line">$ hexo deploy</div><div class="line">部署完成之后点击立即验证或者直接访问,域名/百度验证文件名,下边是我的</div></pre></td></tr></table></figure>
<p><a href="http://www.iooeo.com/baidu_verify_a501VUvpmw.html">http://www.iooeo.com/baidu_verify_a501VUvpmw.html</a></p>
<h3 id="链接提交"><a href="#链接提交" class="headerlink" title="链接提交"></a>链接提交</h3><p>点击链接提交,选择网站<br>如何选择链接提交方式<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">1、主动推送：最为快速的提交方式，推荐您将站点当天新产出链接立即通过此方式推送给百度，以保证新链接可以及时被百度收录。</div><div class="line">2、自动推送：最为便捷的提交方式，请将自动推送的JS代码部署在站点的每一个页面源代码中，部署代码的页面在每次被浏览时，链接会被自动推送给百度。可以与主动推送配合使用。</div><div class="line">3、sitemap：您可以定期将网站链接放到sitemap中，然后将sitemap提交给百度。百度会周期性的抓取检查您提交的sitemap，对其中的链接进行处理，但收录速度慢于主动推送。</div><div class="line">4、手动提交：一次性提交链接给百度，可以使用此种方式。</div></pre></td></tr></table></figure></p>
<p>sitemap提交</p>
<blockquote>
<p>这个时候需要用到上面生产的sitemap了,选择自动提交种的sitemap,将<a href="http://www.iooeo.com/baidusitemap.xml">http://www.iooeo.com/baidusitemap.xml</a>粘贴到输入框内,输入验证码,点击提交<br>下面的列表就会出现你添加的sitemap链接了,这个时候状态栏显示的应该是等待,一般过几十秒刷新一下页面就会正常,然后百度就会自动的周期抓取你的sitemap</p>
</blockquote>
<p>自动推送</p>
<blockquote>
<p>安装自动推送JS代码的网页，在页面被访问时，页面URL将立即被推送给百度。<br>可以将下面代码添加到post模板中,这样每篇文章生成的时候都会有自动推送代码<br>最直接的就是直接添加到主题目录下的layout/post.swig文件下</p>
</blockquote>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div></pre></td><td class="code"><pre><div class="line">&lt;script&gt;</div><div class="line">(function()&#123;</div><div class="line">    var bp = document.createElement(&apos;script&apos;);</div><div class="line">    var curProtocol = window.location.protocol.split(&apos;:&apos;)[0];</div><div class="line">    if (curProtocol === &apos;https&apos;) &#123;</div><div class="line">        bp.src = &apos;https://zz.bdstatic.com/linksubmit/push.js&apos;;        </div><div class="line">    &#125;</div><div class="line">    else &#123;</div><div class="line">        bp.src = &apos;http://push.zhanzhang.baidu.com/push.js&apos;;</div><div class="line">    &#125;</div><div class="line">    var s = document.getElementsByTagName(&quot;script&quot;)[0];</div><div class="line">    s.parentNode.insertBefore(bp, s);</div><div class="line">&#125;)();</div><div class="line">&lt;/script&gt;</div></pre></td></tr></table></figure>
<p>主动推送</p>
<blockquote>
<p>主动推送最为快速的提交方式,是被百度收录最快的推送方式<br>百度提供了主动推送的示例:支持curl、php、python、java、php、ruby等等方式,你可以自己选择一种进行主动推送<br>具体使用帮助请看<a href="http://zhanzhang.baidu.com/linksubmit/index" target="_blank" rel="external">主动推送教程</a></p>
</blockquote>
<h2 id="Google验证网站"><a href="#Google验证网站" class="headerlink" title="Google验证网站"></a>Google验证网站</h2><p><a href="https://www.google.com/webmasters/tools/home?hl=zh-CN" target="_blank" rel="external">Google站点提交入口</a><br>添加站点…<br>验证站点…<br>下载文件…<br>步骤基本跟百度一样…</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;网站地图&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;网站地图，又称站点地图，它就是一个页面，上面放置了网站上需要搜索引擎抓取的所有页面的链接（注：不是所有页面）。大多数人在网站上找不到自己所需要的信息时，可能会将网站地图作为一种补救措施。搜索引擎蜘蛛非常喜欢网站地图&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
      <category term="Hexo" scheme="http://www.iooeo.com/categories/Hexo/"/>
    
    
      <category term="Hexo" scheme="http://www.iooeo.com/tags/Hexo/"/>
    
      <category term="Github" scheme="http://www.iooeo.com/tags/Github/"/>
    
      <category term="coding" scheme="http://www.iooeo.com/tags/coding/"/>
    
      <category term="Markdown" scheme="http://www.iooeo.com/tags/Markdown/"/>
    
      <category term="搜索引擎" scheme="http://www.iooeo.com/tags/%E6%90%9C%E7%B4%A2%E5%BC%95%E6%93%8E/"/>
    
  </entry>
  
  <entry>
    <title>Hexo+Github+coding搭建个人博客 - 配置域名分流解析篇</title>
    <link href="http://www.iooeo.com/2017/07/04/Hexo+Github+coding%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%20-%20%E9%85%8D%E7%BD%AE%E5%9F%9F%E5%90%8D%E5%88%86%E6%B5%81%E8%A7%A3%E6%9E%90%E7%AF%87/"/>
    <id>http://www.iooeo.com/2017/07/04/Hexo+Github+coding搭建个人博客 - 配置域名分流解析篇/</id>
    <published>2017-07-04T02:25:06.000Z</published>
    <updated>2017-07-04T06:36:27.000Z</updated>
    
    <content type="html"><![CDATA[<p>前边我们已经分别介绍了,Hexo 本地安装,Hexo GitHub 代码部署,Hexo Coding 代码部署实现了通过外网访问自己的博客</p>
<ul>
<li><a href="http://www.iooeo.com/2017/07/03/Hexo+Github+coding%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%20-%20Hexo%20%E6%9C%AC%E5%9C%B0%E5%AE%89%E8%A3%85%E7%AF%87/">Hexo 本地安装篇</a></li>
<li><a href="http://www.iooeo.com/2017/07/03/Hexo+Github+coding%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%20-%20GitHub%20%E7%AF%87/">Hexo GitHub 篇</a></li>
<li><a href="http://www.iooeo.com/2017/07/04/Hexo-Github-coding%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2-Coding-%E7%AF%87/">Hexo Coding 篇</a></li>
</ul>
<p>如果你没有自己的域名的话,可能就到此为止了,如果你有属于自己的域名的话,惊喜还在后面,请继续….<br><a id="more"></a></p>
<h2 id="项目内域名配置"><a href="#项目内域名配置" class="headerlink" title="项目内域名配置"></a>项目内域名配置</h2><p>打开你的Hexo项目,在<em>/source/</em>目录下创建以CNAME为文件名称的文件<br>内容:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">www.iooeo.com</div></pre></td></tr></table></figure></p>
<p><em>www.iooeo.com</em>是我的域名,此处该成你自己的就可以了.<br>然后执行Hexo部署命令<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo deploy</div></pre></td></tr></table></figure></p>
<p>分别登陆Coding和GitHub,进入项目,点击项目的Pages 服务,绑定你的域名<code>GitHub好像自动给添加了</code><br><code>Coding更新了新版本以后,绑定域名必须要会员等级黄金以上,开始商业化了.白银级别的要经过Coding页面5秒钟跳转,而且国内访问GitHub也不是太慢了,现在建议直接走GitHub了,可以忽略Coding部分</code></p>
<h2 id="域名服务商配置域名解析"><a href="#域名服务商配置域名解析" class="headerlink" title="域名服务商配置域名解析"></a>域名服务商配置域名解析</h2><p>添加两条CNAME解析记录,主机记录分别是@和www,解析线路全部为默认,记录值全部为youName.github.io</p>
<hr>
<p><code>Coding没升级之前,Coding负责国内域名分流,GitHub负责国外域名分流,而且Coding访问稍微快一些.
但是可以这种模式没能继续下去,因为Coding已经走向商业化了.当然你要是选择付费升级会员的话,可以继续使用以下这种模式.</code><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">添加两条CNAME解析记录,主机记录分别是@和www,解析线路全部为默认,记录值全部为youName.coding.me,确保Coding上项目内Pages 服务已绑定域名</div><div class="line">添加两条CNAME解析记录,主机记录分别是@和www,解析线路全部为海外,记录值全部为youName.github.io</div></pre></td></tr></table></figure></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;前边我们已经分别介绍了,Hexo 本地安装,Hexo GitHub 代码部署,Hexo Coding 代码部署实现了通过外网访问自己的博客&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://www.iooeo.com/2017/07/03/Hexo+Github+coding%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%20-%20Hexo%20%E6%9C%AC%E5%9C%B0%E5%AE%89%E8%A3%85%E7%AF%87/&quot;&gt;Hexo 本地安装篇&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://www.iooeo.com/2017/07/03/Hexo+Github+coding%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%20-%20GitHub%20%E7%AF%87/&quot;&gt;Hexo GitHub 篇&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://www.iooeo.com/2017/07/04/Hexo-Github-coding%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2-Coding-%E7%AF%87/&quot;&gt;Hexo Coding 篇&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;如果你没有自己的域名的话,可能就到此为止了,如果你有属于自己的域名的话,惊喜还在后面,请继续….&lt;br&gt;
    
    </summary>
    
      <category term="Hexo" scheme="http://www.iooeo.com/categories/Hexo/"/>
    
    
      <category term="Hexo" scheme="http://www.iooeo.com/tags/Hexo/"/>
    
      <category term="Github" scheme="http://www.iooeo.com/tags/Github/"/>
    
      <category term="coding" scheme="http://www.iooeo.com/tags/coding/"/>
    
      <category term="Markdown" scheme="http://www.iooeo.com/tags/Markdown/"/>
    
  </entry>
  
  <entry>
    <title>Hexo+Github+coding搭建个人博客 - Coding 篇</title>
    <link href="http://www.iooeo.com/2017/07/04/Hexo+Github+coding%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%20-%20Coding%20%E7%AF%87/"/>
    <id>http://www.iooeo.com/2017/07/04/Hexo+Github+coding搭建个人博客 - Coding 篇/</id>
    <published>2017-07-04T01:22:24.000Z</published>
    <updated>2017-07-04T02:31:16.000Z</updated>
    
    <content type="html"><![CDATA[<p>有Coding的直接登录,没有的<a href="https://coding.net/" target="_blank" rel="external">Coding</a>注册</p>
<h2 id="创建仓库"><a href="#创建仓库" class="headerlink" title="创建仓库"></a>创建仓库</h2><p>添加项目,填写项目名称/描述…当然这个名字的格式最好为youName<em>(youName为你的Coding用户名)</em>，例如我的为Mercis<br><a id="more"></a></p>
<h2 id="配置SSH-Key"><a href="#配置SSH-Key" class="headerlink" title="配置SSH Key"></a>配置SSH Key</h2><p><a href="http://www.iooeo.com/2017/07/03/Hexo+Github+coding%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%20-%20GitHub%20%E7%AF%87/">GitHub篇</a>已经讲过了,步骤差不多,现在直接将<em>.ssh/id_rsa.pub</em>的内容copy到Coding-&gt;个人设置-&gt;SSH 公匙,添加即可<br>添加好SSH Key 以后测试,返回 Hi youName!…..表示成功<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ ssh -T git@git.coding.net</div></pre></td></tr></table></figure></p>
<h2 id="部署Hexo项目到Coding"><a href="#部署Hexo项目到Coding" class="headerlink" title="部署Hexo项目到Coding"></a>部署Hexo项目到Coding</h2><p>打开Hexo博客目录下的站点配置文件_config.yml，经过之前<a href="http://www.iooeo.com/2017/07/03/Hexo+Github+coding%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%20-%20GitHub%20%E7%AF%87/">GitHub篇</a>我们的配置已经是：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">deploy:</div><div class="line">  type: git</div><div class="line">  repo: git@github.com:Mercis/Mercis.github.io.git</div><div class="line">  branch: master</div></pre></td></tr></table></figure></p>
<p>现在需要改成这样:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">deploy:</div><div class="line">  type: git</div><div class="line">  repo: </div><div class="line">    github: git@github.com:Mercis/Mercis.github.io.git</div><div class="line">    coding: git@git.coding.net:mercis/mercis.git</div><div class="line">  branch: master</div></pre></td></tr></table></figure></p>
<p>这个地方值得注意的是<code>当部署仓库有多个时,需要将repo改成键值对的格式,前面的名称可以规范为代码托管平台的名称,自己能区分就行,还是提示一下,yml 格式文件冒号(:)后面必须有一个空格</code><br>执行Hexo部署命令,执行成功后,登录Coding项目已经有你Hexo项目文件了<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo deploy</div></pre></td></tr></table></figure></p>
<p>开启Coding Pages功能<br>点击项目的Pages服务,部署来源选择master 分支,点击保存,访问<code>http://youName.coding.me/</code>就可以了,这样Coding部署已经正式完成了</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;有Coding的直接登录,没有的&lt;a href=&quot;https://coding.net/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Coding&lt;/a&gt;注册&lt;/p&gt;
&lt;h2 id=&quot;创建仓库&quot;&gt;&lt;a href=&quot;#创建仓库&quot; class=&quot;headerlink&quot; title=&quot;创建仓库&quot;&gt;&lt;/a&gt;创建仓库&lt;/h2&gt;&lt;p&gt;添加项目,填写项目名称/描述…当然这个名字的格式最好为youName&lt;em&gt;(youName为你的Coding用户名)&lt;/em&gt;，例如我的为Mercis&lt;br&gt;
    
    </summary>
    
      <category term="Hexo" scheme="http://www.iooeo.com/categories/Hexo/"/>
    
    
      <category term="Hexo" scheme="http://www.iooeo.com/tags/Hexo/"/>
    
      <category term="Github" scheme="http://www.iooeo.com/tags/Github/"/>
    
      <category term="coding" scheme="http://www.iooeo.com/tags/coding/"/>
    
      <category term="Markdown" scheme="http://www.iooeo.com/tags/Markdown/"/>
    
  </entry>
  
  <entry>
    <title>Hexo+Github+coding搭建个人博客 - GitHub 篇</title>
    <link href="http://www.iooeo.com/2017/07/03/Hexo+Github+coding%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%20-%20GitHub%20%E7%AF%87/"/>
    <id>http://www.iooeo.com/2017/07/03/Hexo+Github+coding搭建个人博客 - GitHub 篇/</id>
    <published>2017-07-03T07:32:48.000Z</published>
    <updated>2017-07-03T10:07:24.000Z</updated>
    
    <content type="html"><![CDATA[<p>有GitHub的直接登录,没有的<a href="https://github.com/" target="_blank" rel="external">GitHub</a>注册</p>
<h2 id="创建仓库"><a href="#创建仓库" class="headerlink" title="创建仓库"></a>创建仓库</h2><p>仓库(Repository)用来放置代码文件,登录之后点击右上角加号,点击New repository<br><a id="more"></a><br><img src="http://ogpq2zwg5.bkt.clouddn.com/WechatIMG6.jpeg" alt="New repository"><br>创建时,只需要填写Repository name即可,当然这个名字的格式必须为youName.github.io<em>(youName为你的Github用户名)</em>，例如我的为Mercis.github.io</p>
<h2 id="配置SSH-Key"><a href="#配置SSH-Key" class="headerlink" title="配置SSH Key"></a>配置SSH Key</h2><p>为了防止每次部署需要输入密码的麻烦,这里使用SSH Key登录<br>生成SSH Key,yourEmail@example.com 替换为你自己的邮箱,过程中需要输入密码等操作,可以全部回车使用默认的<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ ssh-keygen -t rsa -b 4096 -C &quot;yourEmail@example.com&quot;</div></pre></td></tr></table></figure></p>
<p>完成之后,用户目录下回多一个.ssh文件夹,里面包含id_rsa和id_rsa.pub两个文件<br>复制id_rsa.pub中的内容<br>添加SSH key到GitHub<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">进入GitHub账号设置页面</div><div class="line">左侧选择 **SSH and GPG keys**</div><div class="line">点击 **New SSH key** 或者 **Add SSH key**</div><div class="line">在&apos;Title&apos;字段中填写此SSH Key的名称，在&apos;Key&apos;字段中填写上面复制好的内容</div><div class="line">点击 **Add SSH key**</div><div class="line">输入账户密码确定操作</div></pre></td></tr></table></figure></p>
<p>测试SSH Key 是否配置成功,返回 Hi youName!…..表示成功<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ ssh -T git@github.com</div></pre></td></tr></table></figure></p>
<p>详细步骤请查看<a href="https://help.github.com/articles/connecting-to-github-with-ssh/" target="_blank" rel="external">GitHub官方添加SSH Key教程</a></p>
<h2 id="部署Hexo项目到GitHub"><a href="#部署Hexo项目到GitHub" class="headerlink" title="部署Hexo项目到GitHub"></a>部署Hexo项目到GitHub</h2><p>部署之前,安装hexo-deployer-git插件<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ npm install hexo-deployer-git --save</div></pre></td></tr></table></figure></p>
<p>打开Hexo博客目录下的站点配置文件_config.yml，修改部署配置：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">deploy:</div><div class="line">  type: git</div><div class="line">  repo: git@github.com:youName/youName.github.io.git</div><div class="line">  branch: master</div></pre></td></tr></table></figure></p>
<p>执行Hexo部署命令,执行成功后,登录GitHub项目已经有你Hexo项目文件了<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo deploy</div></pre></td></tr></table></figure></p>
<p>开启GitHub Pages功能<br>因为youName.github.io项目名称是用的youName,所以GitHub Pages是默认配置好的</p>
<h2 id="添加新文章"><a href="#添加新文章" class="headerlink" title="添加新文章"></a>添加新文章</h2><p>创建文章<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo new &quot;myNewPost&quot;</div></pre></td></tr></table></figure></p>
<p>编辑文章内容<br>打开Hexo博客目录下的<em>source/_post/myNewPost.md</em><br>Hexo 中文章是使用的Markdown语法，不知道MarkDown的自行百度,附送非官方链接<a href="http://www.appinn.com/markdown/" target="_blank" rel="external">语法说明</a><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line">---</div><div class="line">title: myNewPost #最后生成的页面Title</div><div class="line">tags:</div><div class="line">  - tag1</div><div class="line">  - tag2  # 文章标签</div><div class="line">categories:</div><div class="line">  - category1 #文章分类</div><div class="line">date: 2016-08-31 23:41:19 # 文章发表日期</div><div class="line">---</div><div class="line">这里是文章正文。</div><div class="line">可以写文章首页简介</div><div class="line">&lt;!--more--&gt;</div><div class="line">这里的内容是查看详情才显示的</div></pre></td></tr></table></figure></p>
<p>编辑完新文章之后<br>生成静态文件<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ 生成静态文件</div></pre></td></tr></table></figure></p>
<p>本地预览<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo server</div></pre></td></tr></table></figure></p>
<p>发布到GitHub<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo deploy</div></pre></td></tr></table></figure></p>
<p>然后就可以去你的youName.github.io查看一下啦….</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;有GitHub的直接登录,没有的&lt;a href=&quot;https://github.com/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;GitHub&lt;/a&gt;注册&lt;/p&gt;
&lt;h2 id=&quot;创建仓库&quot;&gt;&lt;a href=&quot;#创建仓库&quot; class=&quot;headerlink&quot; title=&quot;创建仓库&quot;&gt;&lt;/a&gt;创建仓库&lt;/h2&gt;&lt;p&gt;仓库(Repository)用来放置代码文件,登录之后点击右上角加号,点击New repository&lt;br&gt;
    
    </summary>
    
      <category term="Hexo" scheme="http://www.iooeo.com/categories/Hexo/"/>
    
    
      <category term="Hexo" scheme="http://www.iooeo.com/tags/Hexo/"/>
    
      <category term="Github" scheme="http://www.iooeo.com/tags/Github/"/>
    
      <category term="coding" scheme="http://www.iooeo.com/tags/coding/"/>
    
      <category term="Markdown" scheme="http://www.iooeo.com/tags/Markdown/"/>
    
  </entry>
  
  <entry>
    <title>Hexo+Github+coding搭建个人博客 - Hexo 本地安装篇</title>
    <link href="http://www.iooeo.com/2017/07/03/Hexo+Github+coding%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%20-%20Hexo%20%E6%9C%AC%E5%9C%B0%E5%AE%89%E8%A3%85%E7%AF%87/"/>
    <id>http://www.iooeo.com/2017/07/03/Hexo+Github+coding搭建个人博客 - Hexo 本地安装篇/</id>
    <published>2017-07-03T06:52:08.000Z</published>
    <updated>2017-07-03T07:33:40.000Z</updated>
    
    <content type="html"><![CDATA[<p>之前自己摸摸索索把博客搭建好了,最近有人问我怎么搭建的,这里把搭建流程跟大家说下吧</p>
<h2 id="开始前准备"><a href="#开始前准备" class="headerlink" title="开始前准备"></a>开始前准备</h2><p>账号相关: </p>
<ul>
<li><a href="https://github.com/" target="_blank" rel="external">GitHub</a> </li>
<li><a href="https://coding.net/" target="_blank" rel="external">Coding</a> </li>
<li><a href="https://wanwang.aliyun.com/" target="_blank" rel="external">域名</a></li>
</ul>
<p>服务相关: </p>
<ul>
<li><a href="https://git-scm.com/download" target="_blank" rel="external">Git</a>     </li>
<li><a href="https://nodejs.org/en/" target="_blank" rel="external">Node.js</a><a id="more"></a>
</li>
</ul>
<h2 id="Hexo-安装和配置"><a href="#Hexo-安装和配置" class="headerlink" title="Hexo 安装和配置"></a>Hexo 安装和配置</h2><p><a href="https://hexo.io/" target="_blank" rel="external">Hexo官网</a><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ npm install hexo-cli -g</div></pre></td></tr></table></figure></p>
<p>初始化Hexo博客目录,时间可能要久一点…<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo init blog</div></pre></td></tr></table></figure></p>
<p>安装依赖包<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">$ cd blog</div><div class="line">$ npm install</div></pre></td></tr></table></figure></p>
<p>生成静态网站<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo generate</div></pre></td></tr></table></figure></p>
<p>本地测试,生成的链接<a href="http://localhost:4000" target="_blank" rel="external">localhost:4000</a>,copy到浏览器直接访问就可以看到效果了.<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo server</div></pre></td></tr></table></figure></p>
<p>本地hexo安装已经完毕,可本地运行</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;之前自己摸摸索索把博客搭建好了,最近有人问我怎么搭建的,这里把搭建流程跟大家说下吧&lt;/p&gt;
&lt;h2 id=&quot;开始前准备&quot;&gt;&lt;a href=&quot;#开始前准备&quot; class=&quot;headerlink&quot; title=&quot;开始前准备&quot;&gt;&lt;/a&gt;开始前准备&lt;/h2&gt;&lt;p&gt;账号相关: &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;GitHub&lt;/a&gt; &lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://coding.net/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Coding&lt;/a&gt; &lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://wanwang.aliyun.com/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;域名&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;服务相关: &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://git-scm.com/download&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Git&lt;/a&gt;     &lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://nodejs.org/en/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Node.js&lt;/a&gt;
    
    </summary>
    
      <category term="Hexo" scheme="http://www.iooeo.com/categories/Hexo/"/>
    
    
      <category term="Hexo" scheme="http://www.iooeo.com/tags/Hexo/"/>
    
      <category term="Github" scheme="http://www.iooeo.com/tags/Github/"/>
    
      <category term="coding" scheme="http://www.iooeo.com/tags/coding/"/>
    
      <category term="Markdown" scheme="http://www.iooeo.com/tags/Markdown/"/>
    
  </entry>
  
  <entry>
    <title>Yii2 安装AdminLTE后台主题资源包</title>
    <link href="http://www.iooeo.com/2017/03/31/Yii2%20%E5%AE%89%E8%A3%85AdminLTE%E5%90%8E%E5%8F%B0%E4%B8%BB%E9%A2%98%E8%B5%84%E6%BA%90%E5%8C%85/"/>
    <id>http://www.iooeo.com/2017/03/31/Yii2 安装AdminLTE后台主题资源包/</id>
    <published>2017-03-31T05:53:00.000Z</published>
    <updated>2017-07-20T06:41:23.000Z</updated>
    
    <content type="html"><![CDATA[<p>为了快捷开发后台和界面的统一,这里我们引入了AdminLTE主题资源包<br>AdminLTE的学习请移至<a href="https://github.com/dmstr/yii2-adminlte-asset" target="_blank" rel="external">dmstr/yii2-adminlte-asset</a><br><a id="more"></a></p>
<h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><p>使用composer安装<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ composer require dmstr/yii2-adminlte-asset &quot;2.*&quot;</div></pre></td></tr></table></figure></p>
<h2 id="使用主题"><a href="#使用主题" class="headerlink" title="使用主题"></a>使用主题</h2><h3 id="方式一"><a href="#方式一" class="headerlink" title="方式一"></a>方式一</h3><p>复制整个<em>vendor/dmstr/yii2-adminlte-asset/example-views/yiisoft/yii2-app</em>目录下的<em>layouts</em>目录和<em>site</em>目录到<em>backend/views</em>,覆盖原始文件</p>
<h3 id="方式二"><a href="#方式二" class="headerlink" title="方式二"></a>方式二</h3><p>在<em>backend/config/main.php</em>中添加一下配置<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">&apos;components&apos; =&gt; [</div><div class="line">    &apos;view&apos; =&gt; [</div><div class="line">         &apos;theme&apos; =&gt; [</div><div class="line">             &apos;pathMap&apos; =&gt; [</div><div class="line">                &apos;@app/views&apos; =&gt; &apos;@vendor/dmstr/yii2-adminlte-asset/example-views/yiisoft/yii2-app&apos;</div><div class="line">             ],</div><div class="line">         ],</div><div class="line">    ],</div><div class="line">],</div></pre></td></tr></table></figure></p>
<h3 id="查看效果"><a href="#查看效果" class="headerlink" title="查看效果"></a>查看效果</h3><p>如果你<em>backend</em>下没有做任何操作的情况下,你会看到登陆页面已经变了.<br>如果想看一下<em>AdminLTE</em>主题的具体效果,将<em>backend/controllers/SiteController.php</em>做一下修改<br>暂时将行为方法注释<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div></pre></td><td class="code"><pre><div class="line">public function behaviors()</div><div class="line">    &#123;</div><div class="line">        return [</div><div class="line">            /**</div><div class="line">             * 注释此处,阻止行为方式,查看AdminLTE主题模板效果</div><div class="line">            &apos;access&apos; =&gt; [</div><div class="line">                &apos;class&apos; =&gt; AccessControl::className(),</div><div class="line">                &apos;rules&apos; =&gt; [</div><div class="line">                    [</div><div class="line">                        &apos;actions&apos; =&gt; [&apos;login&apos;, &apos;error&apos;],</div><div class="line">                        &apos;allow&apos; =&gt; true,</div><div class="line">                    ],</div><div class="line">                    [</div><div class="line">                        &apos;actions&apos; =&gt; [&apos;logout&apos;, &apos;index&apos;],</div><div class="line">                        &apos;allow&apos; =&gt; true,</div><div class="line">                        &apos;roles&apos; =&gt; [&apos;@&apos;],</div><div class="line">                    ],</div><div class="line">                ],</div><div class="line">            ],</div><div class="line">             */</div><div class="line">            &apos;verbs&apos; =&gt; [</div><div class="line">                &apos;class&apos; =&gt; VerbFilter::className(),</div><div class="line">                &apos;actions&apos; =&gt; [</div><div class="line">                    &apos;logout&apos; =&gt; [&apos;post&apos;],</div><div class="line">                ],</div><div class="line">            ],</div><div class="line">        ];</div><div class="line">    &#125;</div></pre></td></tr></table></figure></p>
<p>然后访问首页,就可以看到<em>AdminLTE</em>主题的具体效果</p>
<h2 id="AdminLTE学习"><a href="#AdminLTE学习" class="headerlink" title="AdminLTE学习"></a>AdminLTE学习</h2><ul>
<li>主题一些简单的页面实例,及学习文档也可以查看<em>vendor/almasaeed2010/adminlte/index.html</em></li>
<li>主题实例<em>vendor/almasaeed2010/adminlte/pages</em></li>
</ul>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;为了快捷开发后台和界面的统一,这里我们引入了AdminLTE主题资源包&lt;br&gt;AdminLTE的学习请移至&lt;a href=&quot;https://github.com/dmstr/yii2-adminlte-asset&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;dmstr/yii2-adminlte-asset&lt;/a&gt;&lt;br&gt;
    
    </summary>
    
      <category term="PHP" scheme="http://www.iooeo.com/categories/PHP/"/>
    
      <category term="Yii2" scheme="http://www.iooeo.com/categories/PHP/Yii2/"/>
    
    
      <category term="PHP" scheme="http://www.iooeo.com/tags/PHP/"/>
    
      <category term="Yii2" scheme="http://www.iooeo.com/tags/Yii2/"/>
    
  </entry>
  
  <entry>
    <title>Yii2 自动存储更新显示数据库时间戳</title>
    <link href="http://www.iooeo.com/2017/03/31/Yii2%20%E8%87%AA%E5%8A%A8%E5%AD%98%E5%82%A8%E6%9B%B4%E6%96%B0%E6%98%BE%E7%A4%BA%E6%95%B0%E6%8D%AE%E5%BA%93%E6%97%B6%E9%97%B4%E6%88%B3/"/>
    <id>http://www.iooeo.com/2017/03/31/Yii2 自动存储更新显示数据库时间戳/</id>
    <published>2017-03-31T05:14:00.000Z</published>
    <updated>2017-07-20T06:43:20.000Z</updated>
    
    <content type="html"><![CDATA[<p>之前我们terms表中有两个时间字段<em>create_at</em>和<em>update_at</em>,现在我们来操作一下,使<em>create_at</em>和<em>update_at</em>在存储时自动更新它的时间戳属性</p>
<h2 id="自动存储更新时间戳属性"><a href="#自动存储更新时间戳属性" class="headerlink" title="自动存储更新时间戳属性"></a>自动存储更新时间戳属性</h2><p>这里我们使用TimestampBehavior先不要管行为不行为,今天就是要时间戳属性自动存储更新<br><a id="more"></a></p>
<h3 id="方式一"><a href="#方式一" class="headerlink" title="方式一"></a>方式一</h3><p>现在我们开始操作<em>/thesaurus/frontend/models/Terms.php</em>,首先别忘了<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">use yii\behaviors\TimestampBehavior;</div></pre></td></tr></table></figure></p>
<p>然后定义方法<em>behaviors</em><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div></pre></td><td class="code"><pre><div class="line">/**</div><div class="line">    * @inheritdoc</div><div class="line">    */</div><div class="line">   public function behaviors()</div><div class="line">   &#123;</div><div class="line">       return [</div><div class="line">           [</div><div class="line">               &apos;class&apos; =&gt; TimestampBehavior::className(),</div><div class="line">               &apos;attributes&apos; =&gt; [</div><div class="line">               	# 添加之前</div><div class="line">                   ActiveRecord::EVENT_BEFORE_INSERT =&gt; [&apos;create_at&apos;, &apos;update_at&apos;],</div><div class="line">                   # 修改之前</div><div class="line">                   ActiveRecord::EVENT_BEFORE_UPDATE =&gt; [&apos;update_at&apos;]</div><div class="line">               ],</div><div class="line">               # 字段值</div><div class="line">               &apos;value&apos; =&gt; time()</div><div class="line">           ]</div><div class="line">       ];</div><div class="line">   &#125;</div></pre></td></tr></table></figure></p>
<h3 id="方式二"><a href="#方式二" class="headerlink" title="方式二"></a>方式二</h3><p>配合下面的 <em>afterFind </em> 格式化时间最佳<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div></pre></td><td class="code"><pre><div class="line">/**</div><div class="line">    * @inheritdoc</div><div class="line">    */</div><div class="line">   public function rules()</div><div class="line">   &#123;</div><div class="line">       return [</div><div class="line">           # 自动补全添加时间和修改时间,配合 afterFind 方法转换格式化时间</div><div class="line">           [&apos;create_at&apos;, &apos;filter&apos;, &apos;filter&apos; =&gt; function () &#123;</div><div class="line">               return $this-&gt;create_at ? strtotime($this-&gt;create_at) : time();</div><div class="line">           &#125;],</div><div class="line">           [&apos;update_at&apos;, &apos;filter&apos;, &apos;filter&apos; =&gt; function () &#123;</div><div class="line">               return $this-&gt;update_at ? strtotime($this-&gt;update_at) : time();</div><div class="line">           &#125;],</div><div class="line">           [[&apos;name&apos;], &apos;required&apos;],</div><div class="line">           [[&apos;create_at&apos;, &apos;update_at&apos;], &apos;integer&apos;],</div><div class="line">           [[&apos;name&apos;], &apos;string&apos;, &apos;max&apos; =&gt; 32],</div><div class="line">       ];</div><div class="line">   &#125;</div></pre></td></tr></table></figure></p>
<p>这个完成以后我们打开<em>/thesaurus/frontend/views/terms/create.php</em><br>看到以下代码<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">&lt;?= $this-&gt;render(&apos;_form&apos;, [</div><div class="line">        &apos;model&apos; =&gt; $model,</div><div class="line"> ]) ?&gt;</div></pre></td></tr></table></figure></p>
<p>然后我们找到<em>/thesaurus/frontend/views/terms/_form.php</em>,把Form表单的<em>create_at</em>和<em>update_at</em>的input框删除掉,只留下<em>name</em><br><img src="http://ogpq2zwg5.bkt.clouddn.com/46e47cfa22a1278849bd1454b5b889f9_1096x351.png" alt=""><br>然后我们打开<em>local.thef.com/index.php?r=terms</em>,点击<em>Create Terms</em>按钮,表单页面是不是只剩下<em>name</em>一览了,添加一个试试</p>
<h2 id="显示格式化时间"><a href="#显示格式化时间" class="headerlink" title="显示格式化时间"></a>显示格式化时间</h2><p>再让我们回到<em>local.thef.com/index.php?r=terms</em>,是不是已经有我们已经添加的数据了,但是时间是有了,感觉有点不对啊,我也觉得是,有办法<br>继续打开<em>/thesaurus/frontend/models/Terms.php</em><br>添加如下方法<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">/**</div><div class="line">    * @inheritdoc</div><div class="line">    */</div><div class="line">   public function afterFind()</div><div class="line">   &#123;</div><div class="line">       parent::afterFind();</div><div class="line">       $this-&gt;create_at = date(&apos;Y-m-d H:i:s&apos;, $this-&gt;create_at);</div><div class="line">       $this-&gt;update_at = date(&apos;Y-m-d H:i:s&apos;, $this-&gt;update_at);</div><div class="line">   &#125;</div></pre></td></tr></table></figure></p>
<p>再回头我们的<em>local.thef.com/index.php?r=terms</em>,这下是不是就看着顺眼了.虽然格式化时间的方法很多,但是我觉得这个够了….</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;之前我们terms表中有两个时间字段&lt;em&gt;create_at&lt;/em&gt;和&lt;em&gt;update_at&lt;/em&gt;,现在我们来操作一下,使&lt;em&gt;create_at&lt;/em&gt;和&lt;em&gt;update_at&lt;/em&gt;在存储时自动更新它的时间戳属性&lt;/p&gt;
&lt;h2 id=&quot;自动存储更新时间戳属性&quot;&gt;&lt;a href=&quot;#自动存储更新时间戳属性&quot; class=&quot;headerlink&quot; title=&quot;自动存储更新时间戳属性&quot;&gt;&lt;/a&gt;自动存储更新时间戳属性&lt;/h2&gt;&lt;p&gt;这里我们使用TimestampBehavior先不要管行为不行为,今天就是要时间戳属性自动存储更新&lt;br&gt;
    
    </summary>
    
      <category term="PHP" scheme="http://www.iooeo.com/categories/PHP/"/>
    
      <category term="Yii2" scheme="http://www.iooeo.com/categories/PHP/Yii2/"/>
    
    
      <category term="PHP" scheme="http://www.iooeo.com/tags/PHP/"/>
    
      <category term="Yii2" scheme="http://www.iooeo.com/tags/Yii2/"/>
    
  </entry>
  
  <entry>
    <title>Yii2 Gii生成代码</title>
    <link href="http://www.iooeo.com/2017/03/31/Yii2%20Gii%E7%94%9F%E6%88%90%E4%BB%A3%E7%A0%81/"/>
    <id>http://www.iooeo.com/2017/03/31/Yii2 Gii生成代码/</id>
    <published>2017-03-31T04:03:00.000Z</published>
    <updated>2017-07-20T06:43:16.000Z</updated>
    
    <content type="html"><![CDATA[<p><em>Gii</em>是<em>Yii</em>中的一个模块,有此神器,撸代码都省了好多,简单的先用一下<br>继续拿我们上边的例子来说<br>访问<em>local.thef.com/index.php?r=gii</em>可以看到操作界面<br><img src="http://ogpq2zwg5.bkt.clouddn.com/b5a75d537f2b14db80bc00eac403b146_1872x1017.png" alt=""><br><a id="more"></a></p>
<h2 id="生成Model"><a href="#生成Model" class="headerlink" title="生成Model"></a>生成Model</h2><p>输入<em>Table Name</em>(有提示,是不是很方便),自动补全<em>Model Class</em><br><img src="http://ogpq2zwg5.bkt.clouddn.com/059d65112126a9ceb42fa35b334373ef_593x234.png" alt=""></p>
<p><em>Namespace</em>这里只在frontend下使用,就小改一下<br><img src="http://ogpq2zwg5.bkt.clouddn.com/02055b3a946b461c98270a1a8829c631_555x89.png" alt=""></p>
<p>最后点击<em>Preview</em>,然后<em>Generate</em>完成,看看<em>thesaurus/frontend/models/</em>目录下是不是多了<em>Terms.php</em><br><img src="http://ogpq2zwg5.bkt.clouddn.com/051d0ec36b52178ad0c25865a63d9655_849x266.png" alt=""></p>
<p>同理点击<em>CRUD Generator</em>,点击<em>Preview</em>,然后<em>Generate</em>完成</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">*Model Class*</div><div class="line">frontend\models\Terms</div><div class="line">*Search Model Class*</div><div class="line">frontend\models\TermsSearch</div><div class="line">*Controller Class*</div><div class="line">frontend\controllers\TermsController</div></pre></td></tr></table></figure>
<p>生成文件:</p>
<ul>
<li>/thesaurus/frontend/models/TermsSearch.php</li>
<li>/thesaurus/frontend/controllers/TermsController.php</li>
<li>/thesaurus/frontend/views/terms/_form.php</li>
<li>/thesaurus/frontend/views/terms/_search.php</li>
<li>/thesaurus/frontend/views/terms/create.php</li>
<li>/thesaurus/frontend/views/terms/index.php</li>
<li>/thesaurus/frontend/views/terms/update.php</li>
<li>/thesaurus/frontend/views/terms/view.php</li>
</ul>
<p>然后访问 <em>local.thef.com/index.php?r=terms</em> 就可以进行你的增删查改了,biubiu,是不是很爽</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;em&gt;Gii&lt;/em&gt;是&lt;em&gt;Yii&lt;/em&gt;中的一个模块,有此神器,撸代码都省了好多,简单的先用一下&lt;br&gt;继续拿我们上边的例子来说&lt;br&gt;访问&lt;em&gt;local.thef.com/index.php?r=gii&lt;/em&gt;可以看到操作界面&lt;br&gt;&lt;img src=&quot;http://ogpq2zwg5.bkt.clouddn.com/b5a75d537f2b14db80bc00eac403b146_1872x1017.png&quot; alt=&quot;&quot;&gt;&lt;br&gt;
    
    </summary>
    
      <category term="PHP" scheme="http://www.iooeo.com/categories/PHP/"/>
    
      <category term="Yii2" scheme="http://www.iooeo.com/categories/PHP/Yii2/"/>
    
    
      <category term="PHP" scheme="http://www.iooeo.com/tags/PHP/"/>
    
      <category term="Yii2" scheme="http://www.iooeo.com/tags/Yii2/"/>
    
  </entry>
  
  <entry>
    <title>Yii2 数据库迁移</title>
    <link href="http://www.iooeo.com/2017/03/31/Yii2%20%E6%95%B0%E6%8D%AE%E5%BA%93%E8%BF%81%E7%A7%BB/"/>
    <id>http://www.iooeo.com/2017/03/31/Yii2 数据库迁移/</id>
    <published>2017-03-31T03:58:00.000Z</published>
    <updated>2017-07-20T06:41:19.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="描述"><a href="#描述" class="headerlink" title="描述"></a>描述</h2><p>在开发和维护一个数据库驱动的应用程序时,数据库的结构会随代码的改变而改变. Yii 提供了一个 数据库迁移功,该功能可以记录数据库的变化, 以便使数据库和源代码一起受版本控制.<br>Yii 提供了一整套的迁移命令行工具，通过这些工具你可以:</p>
<ul>
<li>创建新的迁移</li>
<li>提交迁移</li>
<li>恢复迁移</li>
<li>重新提交迁移</li>
<li>现实迁移历史和状态<a id="more"></a>
下面我简单用一下,至于更复杂的应用会在后期的更新中补充掉</li>
</ul>
<h2 id="实操"><a href="#实操" class="headerlink" title="实操"></a>实操</h2><p>先看下帮助<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">$ cd thesaurus</div><div class="line">$ php yii migrate -h</div></pre></td></tr></table></figure></p>
<p>最重要的是下面这段<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">- migrate/create        Creates a new migration.</div><div class="line">- migrate/down          Downgrades the application by reverting old migrations.</div><div class="line">- migrate/history       Displays the migration history.</div><div class="line">- migrate/mark          Modifies the migration history to the specified version.</div><div class="line">- migrate/new           Displays the un-applied new migrations.</div><div class="line">- migrate/redo          Redoes the last few migrations.</div><div class="line">- migrate/to            Upgrades or downgrades till the specified version.</div><div class="line">- migrate/up (default)  Upgrades the application by applying new migrations.</div></pre></td></tr></table></figure></p>
<p>出于好奇心,我们先<em>create</em>一个表试试看看<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ php yii migrate/create create_terms_table</div></pre></td></tr></table></figure></p>
<p>提示创建一个新的迁移文件,输入<em>yes</em>看到<em>New migration created successfully.</em>表示成功<br>生成的文件在<em>/thesaurus/console/migrations/mxxxxxx_xxxxxx_create_terms_table.php</em>,打开编辑terms所需字段<br><img src="http://ogpq2zwg5.bkt.clouddn.com/38d04f1df5e8735d86cedbd355ac706f_611x452.png" alt=""></p>
<p>我这里添加了<em>name</em>和<em>create_at</em>,<em>update_at</em>字段,上边的属性各位估计也能看明白,下边执行迁移<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ php yii migrate</div></pre></td></tr></table></figure></p>
<p>安装提示输入<em>yes</em>,看到<em>Migrated up successfully</em>说明成功,通过数据库工具<em>Navicat Premium</em>可以看到数据库中多了三个表<em>migration</em>,<em>terms</em>,<em>user</em>,其中<em>migration</em>是用来记录迁移历史记录的,<em>user</em>是项目初始化中自带的(也就是你刚刚登陆不成功那个<em>user</em>表),<em>terms</em>当然使我们自己创建的<br>剩下的命令就不做过多演示了,记住几个比较常用,完全无压力<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">- migrate/create        创建新的迁移.</div><div class="line">- migrate/down          恢复上一个迁移.</div><div class="line">- migrate/history       显示迁移历史和状态.</div><div class="line">- migrate               提交迁移</div></pre></td></tr></table></figure></p>
]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;描述&quot;&gt;&lt;a href=&quot;#描述&quot; class=&quot;headerlink&quot; title=&quot;描述&quot;&gt;&lt;/a&gt;描述&lt;/h2&gt;&lt;p&gt;在开发和维护一个数据库驱动的应用程序时,数据库的结构会随代码的改变而改变. Yii 提供了一个 数据库迁移功,该功能可以记录数据库的变化, 以便使数据库和源代码一起受版本控制.&lt;br&gt;Yii 提供了一整套的迁移命令行工具，通过这些工具你可以:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;创建新的迁移&lt;/li&gt;
&lt;li&gt;提交迁移&lt;/li&gt;
&lt;li&gt;恢复迁移&lt;/li&gt;
&lt;li&gt;重新提交迁移&lt;/li&gt;
&lt;li&gt;现实迁移历史和状态
    
    </summary>
    
      <category term="PHP" scheme="http://www.iooeo.com/categories/PHP/"/>
    
      <category term="Yii2" scheme="http://www.iooeo.com/categories/PHP/Yii2/"/>
    
    
      <category term="PHP" scheme="http://www.iooeo.com/tags/PHP/"/>
    
      <category term="Yii2" scheme="http://www.iooeo.com/tags/Yii2/"/>
    
  </entry>
  
</feed>
